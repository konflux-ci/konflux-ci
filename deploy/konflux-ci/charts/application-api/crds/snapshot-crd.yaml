apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: snapshots.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: Snapshot
    listKind: SnapshotList
    plural: snapshots
    shortNames:
    - as
    - snapshot
    singular: snapshot
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Snapshot is the Schema for the snapshots API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SnapshotSpec defines the desired state of Snapshot
            properties:
              application:
                description: Application is a reference to the name of an Application
                  resource within the same namespace, which defines the target application
                  for the Snapshot (when used with a Binding).
                type: string
              artifacts:
                description: Artifacts is a placeholder section for 'artifact links'
                  we want to maintain to other AppStudio resources. See Environment
                  API doc for details.
                properties:
                  unstableFields:
                    description: 'NOTE: This field (and struct) are placeholders.
                      - Until this API is stabilized, consumers of the API may store
                      any unstructured JSON/YAML data here, but no backwards compatibility
                      will be preserved.'
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              components:
                description: Components field contains the sets of components to deploy
                  as part of this snapshot.
                items:
                  description: SnapshotComponent
                  properties:
                    containerImage:
                      description: ContainerImage is the container image to use when
                        deploying the component, as part of a Snapshot
                      type: string
                    name:
                      description: Name is the name of the component
                      type: string
                    source:
                      description: Source describes the Component source. Optional.
                      properties:
                        git:
                          description: Git Source for a Component. Optional.
                          properties:
                            context:
                              description: 'A relative path inside the git repo containing
                                the component Example: folderA/folderB/gitops. Optional.'
                              type: string
                            devfileUrl:
                              description: 'If specified, the devfile at the URI will
                                be used for the component. Can be a local path inside
                                the repository, or an external URL. Example: https://raw.githubusercontent.com/devfile-samples/devfile-sample-java-springboot-basic/main/devfile.yaml.
                                Optional.'
                              type: string
                            dockerfileUrl:
                              description: If specified, the dockerfile at the URI
                                will be used for the component. Can be a local path
                                inside the repository, or an external URL. Optional.
                              type: string
                            revision:
                              description: 'Specify a branch/tag/commit id. If not
                                specified, default is `main`/`master`. Example: devel.
                                Optional.'
                              type: string
                            url:
                              description: An HTTPS URL representing the git repository
                                to create the component from.
                              type: string
                          required:
                          - url
                          type: object
                      type: object
                  required:
                  - containerImage
                  - name
                  type: object
                type: array
              displayDescription:
                description: DisplayDescription is a user-visible, user definable
                  description for the resource (and is not used for any functional
                  behaviour)
                type: string
              displayName:
                description: DisplayName is a user-visible, user-definable name for
                  the resource (and is not used for any functional behaviour)
                type: string
            required:
            - application
            type: object
          status:
            description: SnapshotStatus defines the observed state of Snapshot
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  for the Snapshot
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
