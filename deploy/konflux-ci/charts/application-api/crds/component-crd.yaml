apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: components.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: Component
    listKind: ComponentList
    plural: components
    shortNames:
    - hascmp
    - hc
    - comp
    singular: component
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[-1].status
      name: Status
      type: string
    - jsonPath: .status.conditions[-1].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[-1].type
      name: Type
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Component is the Schema for the components API.    For a detailed
          description with examples, refer to <a href="https://github.com/redhat-appstudio/book/blob/main/book/HAS/hybrid-application-service-api.md">
          Hybrid Application Service Kube API </a>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ComponentSpec defines the desired state of Component
            properties:
              application:
                description: Application is the name of the application resource that
                  the component belongs to. Required.
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              build-nudges-ref:
                description: The list of components to be nudged by this components
                  build upon a successful result. Optional.
                items:
                  type: string
                type: array
              componentName:
                description: ComponentName is name of the component to be added to
                  the Application. The name must adhere to DNS-1123 validation. Required.
                maxLength: 63
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              containerImage:
                description: 'The container image to build or create the component
                  from Example: quay.io/someorg/somerepository:latest. Optional.'
                type: string
              env:
                description: An array of environment variables to add to the component
                  (ValueFrom not currently supported) Optional
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              replicas:
                description: The number of replicas to deploy the component with.
                  Optional.
                type: integer
              resources:
                description: Compute Resources required by this component. Optional.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              route:
                description: The route to expose the component with. Optional.
                type: string
              secret:
                description: 'Secret describes the name of a Kubernetes secret containing
                  either: 1. A Personal Access Token to access the Component''s git
                  repostiory (if using a Git-source component) or 2. An Image Pull
                  Secret to access the Component''s container image (if using an Image-source
                  component). Optional.'
                type: string
              skipGitOpsResourceGeneration:
                description: Whether or not to bypass the generation of GitOps resources
                  for the Component. Defaults to false. Optional.
                type: boolean
              source:
                description: Source describes the Component source. Optional.
                properties:
                  git:
                    description: Git Source for a Component. Optional.
                    properties:
                      context:
                        description: 'A relative path inside the git repo containing
                          the component Example: folderA/folderB/gitops. Optional.'
                        type: string
                      devfileUrl:
                        description: 'If specified, the devfile at the URI will be
                          used for the component. Can be a local path inside the repository,
                          or an external URL. Example: https://raw.githubusercontent.com/devfile-samples/devfile-sample-java-springboot-basic/main/devfile.yaml.
                          Optional.'
                        type: string
                      dockerfileUrl:
                        description: If specified, the dockerfile at the URI will
                          be used for the component. Can be a local path inside the
                          repository, or an external URL. Optional.
                        type: string
                      revision:
                        description: 'Specify a branch/tag/commit id. If not specified,
                          default is `main`/`master`. Example: devel. Optional.'
                        type: string
                      url:
                        description: An HTTPS URL representing the git repository
                          to create the component from.
                        type: string
                    required:
                    - url
                    type: object
                type: object
              targetPort:
                description: The port to expose the component over. Optional.
                type: integer
            required:
            - application
            - componentName
            type: object
          status:
            description: ComponentStatus defines the observed state of Component
            properties:
              build-nudged-by:
                description: The list of names of Components whose builds nudge this
                  resource (their spec.build-nudges-ref[] references this component)
                items:
                  type: string
                type: array
              conditions:
                description: Conditions is an array of the Component's status conditions
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              containerImage:
                description: ContainerImage stores the associated built container
                  image for the component
                type: string
              devfile:
                description: The devfile model for the Component CR
                type: string
              gitops:
                description: GitOps specific status for the Component CR
                properties:
                  branch:
                    description: Branch is the git branch used for the gitops repository
                    type: string
                  commitID:
                    description: CommitID is the most recent commit ID in the GitOps
                      repository for this component
                    type: string
                  context:
                    description: Context is the path within the gitops repository
                      used for the gitops resources
                    type: string
                  repositoryURL:
                    description: RepositoryURL is the gitops repository URL for the
                      component
                    type: string
                  resourceGenerationSkipped:
                    description: ResourceGenerationSkipped is whether or not GitOps
                      resource generation was skipped for the component
                    type: boolean
                type: object
              lastBuiltCommit:
                description: 'The last built commit id (SHA-1 checksum) from the latest
                  component build. Example: 41fbdb124775323f58fd5ce93c70bb7d79c20650.'
                type: string
              lastPromotedImage:
                description: 'The last digest image component promoted with. Example:
                  quay.io/someorg/somerepository@sha256:5ca85b7f7b9da18a9c4101e81ee1d9bac35ac2b0b0221908ff7389204660a262.'
                type: string
              webhook:
                description: Webhook URL generated by Builds
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
