apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: release-service/serving-cert
    controller-gen.kubebuilder.io/version: v0.14.0
  name: releases.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: Release
    listKind: ReleaseList
    plural: releases
    shortNames:
    - rel
    singular: release
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.snapshot
      name: Snapshot
      type: string
    - jsonPath: .spec.releasePlan
      name: ReleasePlan
      type: string
    - jsonPath: .status.conditions[?(@.type=="Released")].reason
      name: Release status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Release is the Schema for the releases API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ReleaseSpec defines the desired state of Release.
            properties:
              data:
                description: Data is an unstructured key used for providing data for
                  the managed Release Pipeline
                type: object
                x-kubernetes-preserve-unknown-fields: true
              gracePeriodDays:
                description: |-
                  GracePeriodDays is the number of days a Release should be kept
                  This value is used to define the Release ExpirationTime
                type: integer
              releasePlan:
                description: ReleasePlan to use for this particular Release
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              snapshot:
                description: Snapshot to be released
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
            required:
            - releasePlan
            - snapshot
            type: object
          status:
            description: ReleaseStatus defines the observed state of Release.
            properties:
              artifacts:
                description: Artifacts is an unstructured key used for storing all
                  the artifacts generated by the managed Release Pipeline
                type: object
                x-kubernetes-preserve-unknown-fields: true
              attribution:
                description: Attribution contains information about the entity authorizing
                  the release
                properties:
                  author:
                    description: Author is the username that the release is attributed
                      to
                    type: string
                  standingAuthorization:
                    description: StandingAuthorization indicates whether the release
                      is attributed through a ReleasePlan
                    type: boolean
                type: object
              automated:
                description: Automated indicates whether the Release was created as
                  part of an automated process or manually by an end-user
                type: boolean
              collectors:
                description: Collectors is an unstructured key used for storing all
                  the collectors results generated by the Collectors Pipeline
                type: object
                x-kubernetes-preserve-unknown-fields: true
              completionTime:
                description: CompletionTime is the time when a Release was completed
                format: date-time
                type: string
              conditions:
                description: Conditions represent the latest available observations
                  for the release
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              expirationTime:
                description: ExpirationTime is the time when a Release can be purged
                format: date-time
                type: string
              finalProcessing:
                description: FinalProcessing contains information about the release
                  final processing
                properties:
                  completionTime:
                    description: CompletionTime is the time when the Release processing
                      was completed
                    format: date-time
                    type: string
                  pipelineRun:
                    description: PipelineRun contains the namespaced name of the managed
                      Release PipelineRun executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  roleBinding:
                    description: |-
                      RoleBinding contains the namespaced name of the roleBinding created for the managed Release PipelineRun
                      executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  startTime:
                    description: StartTime is the time when the Release processing
                      started
                    format: date-time
                    type: string
                type: object
              managedProcessing:
                description: ManagedProcessing contains information about the release
                  managed processing
                properties:
                  completionTime:
                    description: CompletionTime is the time when the Release processing
                      was completed
                    format: date-time
                    type: string
                  pipelineRun:
                    description: PipelineRun contains the namespaced name of the managed
                      Release PipelineRun executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  roleBinding:
                    description: |-
                      RoleBinding contains the namespaced name of the roleBinding created for the managed Release PipelineRun
                      executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  startTime:
                    description: StartTime is the time when the Release processing
                      started
                    format: date-time
                    type: string
                type: object
              startTime:
                description: StartTime is the time when a Release started
                format: date-time
                type: string
              target:
                description: Target references where this release is intended to be
                  released to
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              tenantProcessing:
                description: TenantProcessing contains information about the release
                  tenant processing
                properties:
                  completionTime:
                    description: CompletionTime is the time when the Release processing
                      was completed
                    format: date-time
                    type: string
                  pipelineRun:
                    description: PipelineRun contains the namespaced name of the managed
                      Release PipelineRun executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  roleBinding:
                    description: |-
                      RoleBinding contains the namespaced name of the roleBinding created for the managed Release PipelineRun
                      executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  startTime:
                    description: StartTime is the time when the Release processing
                      started
                    format: date-time
                    type: string
                type: object
              validation:
                description: Validation contains information about the release validation
                properties:
                  failedPostValidation:
                    description: FailedPostValidation indicates whether the Release
                      was marked as invalid after being initially marked as valid
                    type: boolean
                  time:
                    description: Time is the time when the Release was validated or
                      when the validation state changed
                    format: date-time
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
