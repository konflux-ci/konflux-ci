apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: integration-service/serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  name: integrationtestscenarios.appstudio.redhat.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: integration-service-webhook-service
          namespace: integration-service
          path: /convert
      conversionReviewVersions:
      - v1alpha1
      - v1beta1
      - v1beta2
  group: appstudio.redhat.com
  names:
    kind: IntegrationTestScenario
    listKind: IntegrationTestScenarioList
    plural: integrationtestscenarios
    shortNames:
    - its
    singular: integrationtestscenario
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.application
      name: Application
      type: string
    deprecated: true
    deprecationWarning: The v1alpha1 version is deprecated and will be automatically
      migrated to v1beta1
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IntegrationTestScenario is the Schema for the integrationtestscenarios
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IntegrationTestScenarioSpec defines the desired state of
              IntegrationScenario
            properties:
              application:
                description: Application that's associated with the IntegrationTestScenario
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              bundle:
                description: Tekton Bundle where to find the pipeline
                type: string
              contexts:
                description: Contexts where this IntegrationTestScenario can be applied
                items:
                  description: TestContext contains the name and values of a Test
                    context
                  properties:
                    description:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              environment:
                description: Environment that will be utilized by the test pipeline
                properties:
                  configuration:
                    description: EnvironmentConfiguration contains Environment-specific
                      configurations details, to be used when generating Component/Application
                      GitOps repository resources.
                    properties:
                      env:
                        description: Env is an array of standard environment variables
                        items:
                          description: EnvVarPair describes environment variables
                            to use for the component
                          properties:
                            name:
                              description: Name is the environment variable name
                              type: string
                            value:
                              description: Value is the environment variable value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      target:
                        description: Target is used to reference a DeploymentTargetClaim
                          for a target Environment. The Environment controller uses
                          the referenced DeploymentTargetClaim to access its bounded
                          DeploymentTarget with cluster credential secret.
                        properties:
                          deploymentTargetClaim:
                            description: DeploymentTargetClaimConfig specifies the
                              DeploymentTargetClaim details for a given Environment.
                            properties:
                              claimName:
                                type: string
                            required:
                            - claimName
                            type: object
                        required:
                        - deploymentTargetClaim
                        type: object
                    type: object
                  name:
                    type: string
                  type:
                    description: 'DEPRECATED: EnvironmentType should no longer be
                      used, and has no replacement. - It''s original purpose was to
                      indicate whether an environment is POC/Non-POC, but these data
                      were ultimately not required.'
                    type: string
                required:
                - name
                - type
                type: object
              params:
                description: Params to pass to the pipeline
                items:
                  description: PipelineParameter contains the name and values of a
                    Tekton Pipeline parameter
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    values:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              pipeline:
                description: Release Tekton Pipeline to execute
                type: string
            required:
            - application
            - bundle
            - pipeline
            type: object
          status:
            description: IntegrationTestScenarioStatus defines the observed state
              of IntegrationTestScenario
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.application
      name: Application
      type: string
    deprecated: true
    deprecationWarning: The v1beta1 version is deprecated and will be automatically
      migrated to v1beta2
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IntegrationTestScenario is the Schema for the integrationtestscenarios
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IntegrationTestScenarioSpec defines the desired state of
              IntegrationScenario
            properties:
              application:
                description: Application that's associated with the IntegrationTestScenario
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              contexts:
                description: Contexts where this IntegrationTestScenario can be applied
                items:
                  description: TestContext contains the name and values of a Test
                    context
                  properties:
                    description:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              environment:
                description: Environment that will be utilized by the test pipeline
                properties:
                  configuration:
                    description: EnvironmentConfiguration contains Environment-specific
                      configurations details, to be used when generating Component/Application
                      GitOps repository resources.
                    properties:
                      env:
                        description: Env is an array of standard environment variables
                        items:
                          description: EnvVarPair describes environment variables
                            to use for the component
                          properties:
                            name:
                              description: Name is the environment variable name
                              type: string
                            value:
                              description: Value is the environment variable value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      target:
                        description: Target is used to reference a DeploymentTargetClaim
                          for a target Environment. The Environment controller uses
                          the referenced DeploymentTargetClaim to access its bounded
                          DeploymentTarget with cluster credential secret.
                        properties:
                          deploymentTargetClaim:
                            description: DeploymentTargetClaimConfig specifies the
                              DeploymentTargetClaim details for a given Environment.
                            properties:
                              claimName:
                                type: string
                            required:
                            - claimName
                            type: object
                        required:
                        - deploymentTargetClaim
                        type: object
                    type: object
                  name:
                    type: string
                  type:
                    description: 'DEPRECATED: EnvironmentType should no longer be
                      used, and has no replacement. - It''s original purpose was to
                      indicate whether an environment is POC/Non-POC, but these data
                      were ultimately not required.'
                    type: string
                required:
                - name
                - type
                type: object
              params:
                description: Params to pass to the pipeline
                items:
                  description: PipelineParameter contains the name and values of a
                    Tekton Pipeline parameter
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    values:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              resolverRef:
                description: Tekton Resolver where to store the Tekton resolverRef
                  trigger Tekton pipeline used to refer to a Pipeline or Task in a
                  remote location like a git repo.
                properties:
                  params:
                    description: Params contains the parameters used to identify the
                      referenced Tekton resource. Example entries might include "repo"
                      or "path" but the set of params ultimately depends on the chosen
                      resolver.
                    items:
                      description: ResolverParameter contains the name and values
                        used to identify the referenced Tekton resource
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  resolver:
                    description: Resolver is the name of the resolver that should
                      perform resolution of the referenced Tekton resource, such as
                      "git" or "bundle"..
                    type: string
                required:
                - params
                - resolver
                type: object
            required:
            - application
            - resolverRef
            type: object
          status:
            description: IntegrationTestScenarioStatus defines the observed state
              of IntegrationTestScenario
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.application
      name: Application
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IntegrationTestScenario is the Schema for the integrationtestscenarios
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IntegrationTestScenarioSpec defines the desired state of
              IntegrationScenario
            properties:
              application:
                description: Application that's associated with the IntegrationTestScenario
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              contexts:
                description: Contexts where this IntegrationTestScenario can be applied
                items:
                  description: TestContext contains the name and values of a Test
                    context
                  properties:
                    description:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              params:
                description: Params to pass to the pipeline
                items:
                  description: PipelineParameter contains the name and values of a
                    Tekton Pipeline parameter
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    values:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              resolverRef:
                description: Tekton Resolver where to store the Tekton resolverRef
                  trigger Tekton pipeline used to refer to a Pipeline or Task in a
                  remote location like a git repo.
                properties:
                  params:
                    description: Params contains the parameters used to identify the
                      referenced Tekton resource. Example entries might include "repo"
                      or "path" but the set of params ultimately depends on the chosen
                      resolver.
                    items:
                      description: ResolverParameter contains the name and values
                        used to identify the referenced Tekton resource
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  resolver:
                    description: Resolver is the name of the resolver that should
                      perform resolution of the referenced Tekton resource, such as
                      "git" or "bundle"..
                    type: string
                required:
                - params
                - resolver
                type: object
            required:
            - application
            - resolverRef
            type: object
          status:
            description: IntegrationTestScenarioStatus defines the observed state
              of IntegrationTestScenario
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
