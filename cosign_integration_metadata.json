{"payloadType":"application/vnd.in-toto+json","payload":"{"_type":"https://in-toto.io/Statement/v0.1", "subject":[{"name":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service", "digest":{"sha256":"33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9"}}, {"name":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service", "digest":{"sha256":"e9e6f7e62bebaa2f0b57d5bb2747c9ea34f15afce888cd7a0c22807bd59cf128"}}, {"name":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service", "digest":{"sha256":"6370cd478067eab7b4286e128545363671f2c48176107459cbd3e9c30dbec156"}}], "predicateType":"https://slsa.dev/provenance/v0.2", "predicate":{"buildConfig":{"tasks":[{"finishedOn":"2025-03-25T13:34:34Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-81884d876cf1cbbb-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"init", "tekton.dev/task":"init"}}, "parameters":{"image-url":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "rebuild":"false", "skip-checks":"false"}}, "name":"init", "ref":{"params":[{"name":"name", "value":"init"}, {"name":"bundle", "value":"quay.io/redhat-appstudio-tekton-catalog/task-init:0.2@sha256:59ef75d02b642df3c20bb6e0705ed398cb7aa1833f66622fe1325051a8170416"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"build", "type":"string", "value":"true"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:34:29Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\necho \"Build Initialize: $IMAGE_URL\"\necho\n\necho \"Determine if Image Already Exists\"\n# Build the image when rebuild is set to true or image does not exist\n# The image check comes last to avoid unnecessary, slow API calls\nif [ \"$REBUILD\" == \"true\" ] || [ \"$SKIP_CHECKS\" == \"false\" ] || ! skopeo inspect --no-tags --raw \"docker://$IMAGE_URL\" &>/dev/null; then\n  echo -n \"true\" > /tekton/results/build\nelse\n  echo -n \"false\" > /tekton/results/build\nfi\n", "environment":{"container":"init", "image":"oci://registry.access.redhat.com/ubi9/skopeo@sha256:fd1203306628a07749973cded3e2a352a250f6db5be15e7d6d6ff750f763f119"}}]}, {"after":["init"], "finishedOn":"2025-03-25T13:34:49Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/categories":"Git", "tekton.dev/displayName":"git clone oci trusted artifacts", "tekton.dev/pipelines.minVersion":"0.21.0", "tekton.dev/platforms":"linux/amd64,linux/s390x,linux/ppc64le,linux/arm64", "tekton.dev/tags":"git", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-ecdc39dae920caaa-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"clone-repository", "tekton.dev/task":"git-clone-oci-ta"}}, "parameters":{"caTrustConfigMapKey":"ca-bundle.crt", "caTrustConfigMapName":"trusted-ca", "depth":"1", "enableSymlinkCheck":"true", "fetchTags":"false", "httpProxy":"", "httpsProxy":"", "noProxy":"", "ociArtifactExpiresAfter":"", "ociStorage":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17.git", "refspec":"", "revision":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "shortCommitLength":"7", "sparseCheckoutDirectories":"", "sslVerify":"true", "submodules":"true", "url":"https://github.com/konflux-ci/integration-service", "userHome":"/tekton/home", "verbose":"false"}}, "name":"clone-repository", "ref":{"params":[{"name":"name", "value":"git-clone-oci-ta"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta:0.1@sha256:9709088bf3c581d4763e9804d9ee3a1f06ad6a61c23237277057c4f0cdc4f9c3"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"CHAINS-GIT_COMMIT", "type":"string", "value":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17"}, {"name":"CHAINS-GIT_URL", "type":"string", "value":"https://github.com/konflux-ci/integration-service"}, {"name":"commit", "type":"string", "value":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17"}, {"name":"commit-timestamp", "type":"string", "value":"1742909644"}, {"name":"short-commit", "type":"string", "value":"5c63f66"}, {"name":"url", "type":"string", "value":"https://github.com/konflux-ci/integration-service"}, {"name":"SOURCE_ARTIFACT", "type":"string", "value":"oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:34:35Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env sh\nset -eu\n\nif [ \"${PARAM_VERBOSE}\" = \"true\" ]; then\n  set -x\nfi\n\nif [ \"${WORKSPACE_BASIC_AUTH_DIRECTORY_BOUND}\" = \"true\" ]; then\n  if [ -f \"${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.git-credentials\" ] && [ -f \"${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.gitconfig\" ]; then\n    cp \"${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.git-credentials\" \"${PARAM_USER_HOME}/.git-credentials\"\n    cp \"${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.gitconfig\" \"${PARAM_USER_HOME}/.gitconfig\"\n  # Compatibility with kubernetes.io/basic-auth secrets\n  elif [ -f \"${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/username\" ] && [ -f \"${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/password\" ]; then\n    HOSTNAME=$(echo $PARAM_URL | awk -F/ '{print $3}')\n    echo \"https://$(cat ${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/username):$(cat ${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/password)@$HOSTNAME\" >\"${PARAM_USER_HOME}/.git-credentials\"\n    echo -e \"[credential \\\"https://$HOSTNAME\\\"]\\n  helper = store\" >\"${PARAM_USER_HOME}/.gitconfig\"\n  else\n    echo \"Unknown basic-auth workspace format\"\n    exit 1\n  fi\n  chmod 400 \"${PARAM_USER_HOME}/.git-credentials\"\n  chmod 400 \"${PARAM_USER_HOME}/.gitconfig\"\nfi\n\n# Should be called after the gitconfig is copied from the repository secret\nca_bundle=/mnt/trusted-ca/ca-bundle.crt\nif [ -f \"$ca_bundle\" ]; then\n  echo \"INFO: Using mounted CA bundle: $ca_bundle\"\n  git config --global http.sslCAInfo \"$ca_bundle\"\nfi\n\nif [ \"${WORKSPACE_SSH_DIRECTORY_BOUND}\" = \"true\" ]; then\n  cp -R \"${WORKSPACE_SSH_DIRECTORY_PATH}\" \"${PARAM_USER_HOME}\"/.ssh\n  chmod 700 \"${PARAM_USER_HOME}\"/.ssh\n  chmod -R 400 \"${PARAM_USER_HOME}\"/.ssh/*\nfi\n\ntest -z \"${PARAM_HTTP_PROXY}\" || export HTTP_PROXY=\"${PARAM_HTTP_PROXY}\"\ntest -z \"${PARAM_HTTPS_PROXY}\" || export HTTPS_PROXY=\"${PARAM_HTTPS_PROXY}\"\ntest -z \"${PARAM_NO_PROXY}\" || export NO_PROXY=\"${PARAM_NO_PROXY}\"\n\n/ko-app/git-init \\\n  -url=\"${PARAM_URL}\" \\\n  -revision=\"${PARAM_REVISION}\" \\\n  -refspec=\"${PARAM_REFSPEC}\" \\\n  -path=\"${CHECKOUT_DIR}\" \\\n  -sslVerify=\"${PARAM_SSL_VERIFY}\" \\\n  -submodules=\"${PARAM_SUBMODULES}\" \\\n  -depth=\"${PARAM_DEPTH}\" \\\n  -sparseCheckoutDirectories=\"${PARAM_SPARSE_CHECKOUT_DIRECTORIES}\"\ncd \"${CHECKOUT_DIR}\"\nRESULT_SHA=\"$(git rev-parse HEAD)\"\nRESULT_SHA_SHORT=\"$(git rev-parse --short=\"${PARAM_SHORT_COMMIT_LENGTH}\" HEAD)\"\nEXIT_CODE=\"$?\"\nif [ \"${EXIT_CODE}\" != 0 ]; then\n  exit \"${EXIT_CODE}\"\nfi\nprintf \"%s\" \"${RESULT_SHA}\" >\"/tekton/results/commit\"\nprintf \"%s\" \"${RESULT_SHA}\" >\"/tekton/results/CHAINS-GIT_COMMIT\"\nprintf \"%s\" \"${RESULT_SHA_SHORT}\" >\"/tekton/results/short-commit\"\nprintf \"%s\" \"${PARAM_URL}\" >\"/tekton/results/url\"\nprintf \"%s\" \"${PARAM_URL}\" >\"/tekton/results/CHAINS-GIT_URL\"\nprintf \"%s\" \"$(git log -1 --pretty=%ct)\" >\"/tekton/results/commit-timestamp\"\n\nif [ \"${PARAM_FETCH_TAGS}\" = \"true\" ]; then\n  echo \"Fetching tags\"\n  if ! git fetch --tags; then\n    echo \"Retrying fetch command...\"\n    git fetch --tags\n  fi\nfi\n", "environment":{"container":"clone", "image":"oci://quay.io/konflux-ci/git-clone@sha256:4e53ebd9242f05ca55bfc8d58b3363d8b9d9bc3ab439d9ab76cdbdf5b1fd42d9"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\nset -euo pipefail\n\ncheck_symlinks() {\n  FOUND_SYMLINK_POINTING_OUTSIDE_OF_REPO=false\n  while read -r symlink; do\n    target=$(readlink -m \"$symlink\")\n    if ! [[ \"$target\" =~ ^$CHECKOUT_DIR ]]; then\n      echo \"The cloned repository contains symlink pointing outside of the cloned repository: $symlink\"\n      FOUND_SYMLINK_POINTING_OUTSIDE_OF_REPO=true\n    fi\n  done < <(find $CHECKOUT_DIR -type l -print)\n  if [ \"$FOUND_SYMLINK_POINTING_OUTSIDE_OF_REPO\" = true ]; then\n    return 1\n  fi\n}\n\nif [ \"${PARAM_ENABLE_SYMLINK_CHECK}\" = \"true\" ]; then\n  echo \"Running symlink check\"\n  check_symlinks\nfi\n", "environment":{"container":"symlink-check", "image":"oci://quay.io/konflux-ci/git-clone@sha256:4e53ebd9242f05ca55bfc8d58b3363d8b9d9bc3ab439d9ab76cdbdf5b1fd42d9"}}, {"annotations":null, "arguments":["create", "--store", "quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17.git", "/tekton/results/SOURCE_ARTIFACT=/var/workdir/source"], "entryPoint":"", "environment":{"container":"create-trusted-artifact", "image":"oci://quay.io/konflux-ci/build-trusted-artifacts@sha256:23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}}]}, {"after":["clone-repository"], "finishedOn":"2025-03-25T13:37:26Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-e7e2b9191b502e69-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "konflux-ci/sealights":"true", "konflux-ci/sealights-language":"go", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"sealights-go-instrumentation", "tekton.dev/task":"sealights-go-oci-ta"}}, "parameters":{"SOURCE_ARTIFACT":"oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf", "branch":"main", "component":"integration-service", "debug":"false", "disable-token-save":"true", "oci-storage":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17.sealights.git", "packages-excluded":[], "pull-request-number":"", "repository-url":"", "revision":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "scm-provider":"github", "target-branch":"main"}}, "name":"sealights-go-instrumentation", "ref":{"params":[{"name":"name", "value":"sealights-go-oci-ta"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-sealights-go-oci-ta:0.1@sha256:7c8fdf2873aee7b02feaa42f4868be55878d2d06dc3a93b1ceb77d1c6fa3fc22"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"TEST_OUTPUT", "type":"string", "value":"{\"result\": \"SUCCESS\"}\n"}, {"name":"sealights-agent-version", "type":"string", "value":"1.1.184"}, {"name":"sealights-bsid", "type":"string", "value":"169b9081-8e6c-4a1b-b9f5-5c9c3717af1e"}, {"name":"sealights-build-name", "type":"string", "value":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17_250325.1335"}, {"name":"sealights-cli-version", "type":"string", "value":"1.0.46"}, {"name":"SOURCE_ARTIFACT", "type":"string", "value":"oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:f8d60780bbdf0bc75e3fea4385231f5a4a28386132b63e0be74c25af32682c8b"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:34:50Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":["use", "oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf=/var/workdir/source"], "entryPoint":"", "environment":{"container":"use-trusted-artifact", "image":"oci://quay.io/konflux-ci/build-trusted-artifacts@sha256:23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nset -euo pipefail\n\necho -n \"${AGENT_VERSION}\" > \"/tekton/results/sealights-agent-version\"\necho -n \"${CLI_VERSION}\" > \"/tekton/results/sealights-cli-version\"\n\nexport SEALIGHTS_TOKEN BUILD_NAME BSID PACKAGES_EXCLUDED_ENUM\n\nSEALIGHTS_TOKEN=\"$(cat /usr/local/sealights-credentials/token)\"\nBUILD_NAME=\"${REVISION}_$(date +'%y%m%d.%H%M')\"\nPACKAGES_EXCLUDED_ENUM=\"$(IFS=,; printf \"%s,\" \"$@\" | sed 's/,$//')\"\n\nhandle_error() {\n  local error_message=$1\n\n  echo -e \"[ERROR]: Sealights scanning failed due reason: ${error_message}\"\n  TEST_OUTPUT=\"{\\\"result\\\": \\\"ERROR\\\"}\"\n  echo \"${TEST_OUTPUT}\" > \"/tekton/results/TEST_OUTPUT\"\n\n  # We should not to let fail sealights scans. If for some reason is down Konflux CI should not fail.\n  exit 0\n}\n\n# In case is coming from /retest event then it's a pull_request\n# if event type is not push and pull_request_number is not empty then is a pull_request\necho \"[INFO] Tekton Event Type received: ${TEST_EVENT}\"\nif [ \"$TEST_EVENT\" != \"push\" ] && [ -n \"$PULL_REQUEST_NUMBER\" ]; then\n  TEST_EVENT=\"pull_request\"\nfi\n\nif ! slcli config init --lang go --token \"${SEALIGHTS_TOKEN}\"; then\n  echo -e \"[ERROR] Failed to initialize Sealights configuration.\"\nfi\n\nif [ -n \"${TEST_EVENT}\" ] && [ \"${TEST_EVENT}\" = \"pull_request\" ]; then\n  echo \"[INFO] Creating build session id from a ${TEST_EVENT} event source code: [ component: ${COMPONENT}, target-branch: ${TARGET_BRANCH}, pull-request-number ${PULL_REQUEST_NUMBER}, latest-commit: ${REVISION} ]\"\n  if ! slcli config create-pr-bsid --fail-build --app \"${COMPONENT}\" --target-branch \"${TARGET_BRANCH}\" \\\n    --pull-request-number \"${PULL_REQUEST_NUMBER}\"  --latest-commit \"${REVISION}\" --repository-url \"${REPOSITORY_URL}\"; then\n    handle_error \"[ERROR] Failed to create PR-based build session ID.\"\n  fi\nelse\n  echo \"[INFO] Creating build session ID (BSID) ${TEST_EVENT} event source code [ component: ${COMPONENT}, branch: ${BRANCH}, build: ${BUILD_NAME} ]\"\n  if ! slcli config create-bsid --fail-build --app \"${COMPONENT}\" --branch \"${BRANCH}\" --build \"${BUILD_NAME}\"; then\n    handle_error \"[ERROR] Failed to create build session ID.\"\n  fi\nfi\n\nif ! slcli scan --packages-excluded \"${PACKAGES_EXCLUDED_ENUM}\" --bsid buildSessionId.txt --path-to-scanner /usr/local/bin/slgoagent \\\n  --workspacepath ./ --scm git --scmProvider \"${SCM_PROVIDER}\" --scmVersion \"0\" --scmBaseUrl \"${REPOSITORY_URL}\" --fail-build --debug=\"${DEBUG}\" --disable-token-save=\"${DISABLE_TOKEN_SAVE}\"; then\n  handle_error \"Sealights scan failed. Please check any network connection with sealights, scan failures in your project or if the token is valid one.\"\nfi\n\necho \"{\\\"result\\\": \\\"SUCCESS\\\"}\" > \"/tekton/results/TEST_OUTPUT\"\n\necho -n \"$(cat buildSessionId.txt)\" > \"/tekton/results/sealights-bsid\"\necho -n \"$BUILD_NAME\" > \"/tekton/results/sealights-build-name\"\n\n# Temporary solution. Remove tokens to not build them\nrm -rf build.json slcmd_config.json\n", "environment":{"container":"sealights-go-instrumentation", "image":"oci://quay.io/konflux-ci/tekton-integration-catalog/sealights-go@sha256:d82ec03997f31e7233b8860b32b64d9d82e5f2d26f2c4809a36fcd8ec9849ad4"}}, {"annotations":null, "arguments":["create", "--store", "quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17.sealights.git", "/tekton/results/SOURCE_ARTIFACT=/var/workdir/source"], "entryPoint":"", "environment":{"container":"create-trusted-artifact", "image":"oci://quay.io/konflux-ci/build-trusted-artifacts@sha256:23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}}]}, {"after":["clone-repository"], "finishedOn":"2025-03-25T13:35:01Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"image-build, konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-9d33806b6939bf7c-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"prefetch-dependencies", "tekton.dev/task":"prefetch-dependencies-oci-ta"}}, "parameters":{"ACTIVATION_KEY":"activation-key", "SOURCE_ARTIFACT":"oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf", "caTrustConfigMapKey":"ca-bundle.crt", "caTrustConfigMapName":"trusted-ca", "config-file-content":"", "dev-package-managers":"false", "input":"", "log-level":"info", "ociArtifactExpiresAfter":"", "ociStorage":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17.prefetch", "sbom-type":"spdx"}}, "name":"prefetch-dependencies", "ref":{"params":[{"name":"name", "value":"prefetch-dependencies-oci-ta"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta:0.2@sha256:786a6601c654a48e32ea51b2636982d2e096da3027ea701009ca956b74a7d400"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"CACHI2_ARTIFACT", "type":"string", "value":""}, {"name":"SOURCE_ARTIFACT", "type":"string", "value":"oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:34:50Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":null, "entryPoint":"if [ -z \"${INPUT}\" ]; then\n  mkdir -p /var/workdir/source\n  mkdir -p /var/workdir/cachi2\n  echo \"true\" >/var/workdir/source/.skip-trusted-artifacts\n  echo \"true\" >/var/workdir/cachi2/.skip-trusted-artifacts\n  echo -n \"${SOURCE_ARTIFACT}\" >/tekton/results/SOURCE_ARTIFACT\n  echo -n \"\" >/tekton/results/CACHI2_ARTIFACT\nfi\n", "environment":{"container":"skip-ta", "image":"oci://registry.access.redhat.com/ubi9/ubi-minimal@sha256:86c6e45fcf6b6e74ff219967bbecaebe4376074d2f347fe8068b035812a0adf9"}}, {"annotations":null, "arguments":["use", "oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf=/var/workdir/source"], "entryPoint":"", "environment":{"container":"use-trusted-artifact", "image":"oci://quay.io/konflux-ci/build-trusted-artifacts@sha256:23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}}, {"annotations":null, "arguments":null, "entryPoint":"if [ -n \"${CONFIG_FILE_CONTENT}\" ]; then\n  # we need to drop 'goproxy_url' for safety reasons until cachi2 decides what the SBOM\n  # impact of this configuration option will be:\n  # https://github.com/containerbuildsystem/cachi2/issues/577\n  yq 'del(.goproxy_url)' <<<\"${CONFIG_FILE_CONTENT}\" >/mnt/config/config.yaml\nfi\n", "environment":{"container":"sanitize-cachi2-config-file-with-yq", "image":"oci://quay.io/konflux-ci/yq@sha256:a87f2bfedda1dab63a2567ab067dba2b6f300af1920db3eec462be18deb4148a"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nset -euo pipefail\n\nRHSM_ORG=\"\"\nRHSM_ACT_KEY=\"\"\nENTITLEMENT_CERT_PATH=\"\"\nENTITLEMENT_CERT_KEY_PATH=\"\"\n\nfunction rhsm_unregister {\n  # best effort:\n  #   - if the system was already successfully unregistered, the command returns 1\n  #   - if unregistering failed/fails, there's not much we can do about it anyway\n  subscription-manager unregister || true\n}\n\nfunction is_json {\n  jq . 2>/dev/null 1>&2 <<<\"$1\"\n}\n\n# The input JSON can be in one of these forms:\n# 1) '[{\"type\": \"gomod\"}, {\"type\": \"bundler\"}]'\n# 2) '{\"packages\": [{\"type\": \"gomod\"}, {\"type\": \"bundler\"}]}'\n# 3) '{\"type\": \"gomod\"}'\nfunction input_json_has_rpm {\n  jq '\n    if (type == \"array\" or type == \"object\") | not then\n      false\n    elif type == \"array\" then\n      any(.[]; .type == \"rpm\")\n    elif has(\"packages\") | not then\n      .type == \"rpm\"\n    elif (.packages | type == \"array\") then\n      any(.packages[]; .type == \"rpm\")\n    else\n      false\n    end' <<<\"$1\"\n}\n\nfunction inject_ssl_opts {\n  input=\"$1\"\n  ssl_options=\"$2\"\n\n  # Check if input is plain string or JSON and if the request specifies RPMs\n  if [ \"$input\" == \"rpm\" ]; then\n    input=\"$(\n      jq -n --argjson ssl \"$ssl_options\" '\n              {\n                type: \"rpm\",\n                options: {\n                  ssl: $ssl\n                }\n              }'\n    )\"\n  elif is_json \"$input\" && [[ $(input_json_has_rpm \"$input\") == true ]]; then\n    # The output JSON may need the SSL options updated for the RPM backend\n    input=\"$(\n      jq \\\n        --argjson ssl \"$ssl_options\" '\n                if type == \"array\" then\n                  map(if .type == \"rpm\" then .options.ssl += $ssl else . end)\n                elif has(\"packages\") then\n                  .packages |= map(if .type == \"rpm\" then .options.ssl += $ssl else . end)\n                else\n                  .options.ssl += $ssl\n                end' \\\n        <<<\"$input\"\n    )\"\n  fi\n  echo \"$input\"\n}\n\nfunction inject_rpm_summary_flag {\n  input=\"$1\"\n\n  if [ \"$input\" == \"rpm\" ]; then\n    input=\"$(jq -n '{type: \"rpm\", include_summary_in_sbom: true}')\"\n\n  elif is_json \"$input\" && [[ $(input_json_has_rpm \"$input\") == true ]]; then\n    input=\"$(jq '\n                if type == \"array\" then\n                  map(\n                    if .type == \"rpm\" and (has(\"include_summary_in_sbom\") | not) then\n                      .include_summary_in_sbom = true\n                    else\n                      .\n                    end)\n\n                elif has(\"packages\") then\n                  .packages |= map(\n                    if .type == \"rpm\" and (has(\"include_summary_in_sbom\") | not) then\n                      .include_summary_in_sbom = true\n                    else\n                      .\n                    end)\n\n                else\n                  if has(\"include_summary_in_sbom\") | not then\n                    .include_summary_in_sbom = true\n                  else\n                    .\n                  end\n\n                end' <<<\"$input\")\"\n  fi\n  echo \"$input\"\n}\n\nif [ -z \"${INPUT}\" ]; then\n  # Confirm input was provided though it's likely the whole task would be skipped if it wasn't\n  echo \"No prefetch will be performed because no input was provided for cachi2 fetch-deps\"\n  exit 0\nfi\n\nif [ -f /mnt/config/config.yaml ]; then\n  config_flag=--config-file=/mnt/config/config.yaml\nelse\n  config_flag=\"\"\nfi\n\nif [ \"$DEV_PACKAGE_MANAGERS\" = \"true\" ]; then\n  dev_pacman_flag=--dev-package-managers\nelse\n  dev_pacman_flag=\"\"\nfi\n\n# Copied from https://github.com/konflux-ci/build-definitions/blob/main/task/git-clone/0.1/git-clone.yaml\nif [ \"${WORKSPACE_GIT_AUTH_BOUND}\" = \"true\" ]; then\n  if [ -f \"${WORKSPACE_GIT_AUTH_PATH}/.git-credentials\" ] && [ -f \"${WORKSPACE_GIT_AUTH_PATH}/.gitconfig\" ]; then\n    cp \"${WORKSPACE_GIT_AUTH_PATH}/.git-credentials\" \"${HOME}/.git-credentials\"\n    cp \"${WORKSPACE_GIT_AUTH_PATH}/.gitconfig\" \"${HOME}/.gitconfig\"\n  # Compatibility with kubernetes.io/basic-auth secrets\n  elif [ -f \"${WORKSPACE_GIT_AUTH_PATH}/username\" ] && [ -f \"${WORKSPACE_GIT_AUTH_PATH}/password\" ]; then\n    HOSTNAME=$(cd \"/var/workdir/source\" && git remote get-url origin | awk -F/ '{print $3}')\n    echo \"https://$(cat ${WORKSPACE_GIT_AUTH_PATH}/username):$(cat ${WORKSPACE_GIT_AUTH_PATH}/password)@$HOSTNAME\" >\"${HOME}/.git-credentials\"\n    echo -e \"[credential \\\"https://$HOSTNAME\\\"]\\n  helper = store\" >\"${HOME}/.gitconfig\"\n  else\n    echo \"Unknown git-basic-auth workspace format\"\n    exit 1\n  fi\n  chmod 400 \"${HOME}/.git-credentials\"\n  chmod 400 \"${HOME}/.gitconfig\"\nfi\n\nif [ \"${WORKSPACE_NETRC_BOUND}\" = \"true\" ]; then\n  cp \"${WORKSPACE_NETRC_PATH}/.netrc\" \"${HOME}/.netrc\"\nfi\n\nca_bundle=/mnt/trusted-ca/ca-bundle.crt\nif [ -f \"$ca_bundle\" ]; then\n  echo \"INFO: Using mounted CA bundle: $ca_bundle\"\n  cp -vf $ca_bundle /etc/pki/ca-trust/source/anchors\n  update-ca-trust\nfi\n\n# RHSM HANDLING: REGISTER RHSM & CACHI2 CONFIGURATION\nif [ -e /activation-key/org ]; then\n  RHSM_ORG=$(cat /activation-key/org)\n  RHSM_ACT_KEY=$(cat /activation-key/activationkey)\n\n  echo \"Registering with Red Hat subscription manager.\"\n  subscription-manager register \\\n    --org \"${RHSM_ORG}\" \\\n    --activationkey \"${RHSM_ACT_KEY}\" || exit 1\n\n  trap rhsm_unregister EXIT\n\n  entitlement_files=\"$(ls -1 /etc/pki/entitlement/*.pem)\"\n  ENTITLEMENT_CERT_KEY_PATH=\"$(grep -e '-key.pem$' <<<\"$entitlement_files\")\"\n  ENTITLEMENT_CERT_PATH=\"$(grep -v -e '-key.pem$' <<<\"$entitlement_files\")\"\n  CA_BUNDLE_PATH=\"/etc/rhsm/ca/redhat-uep.pem\"\n\n  CACHI2_SSL_OPTS=\"$(\n    jq -n \\\n      --arg key \"$ENTITLEMENT_CERT_KEY_PATH\" \\\n      --arg cert \"$ENTITLEMENT_CERT_PATH\" \\\n      --arg ca_bundle \"$CA_BUNDLE_PATH\" \\\n      '{client_key: $key, client_cert: $cert, ca_bundle: $ca_bundle}'\n  )\"\n\n  # We need to modify the cachi2 params in place if we're processing RPMs\n  INPUT=$(inject_ssl_opts \"$INPUT\" \"$CACHI2_SSL_OPTS\")\nfi\n\nINPUT=$(inject_rpm_summary_flag \"$INPUT\")\n\ncachi2 --log-level=\"$LOG_LEVEL\" $config_flag fetch-deps \\\n  $dev_pacman_flag \\\n  --source=/var/workdir/source \\\n  --output=/var/workdir/cachi2/output \\\n  --sbom-output-type=\"$SBOM_TYPE\" \\\n  \"${INPUT}\"\n\ncachi2 --log-level=\"$LOG_LEVEL\" generate-env /var/workdir/cachi2/output \\\n  --format env \\\n  --for-output-dir=/cachi2/output \\\n  --output /var/workdir/cachi2/cachi2.env\n\ncachi2 --log-level=\"$LOG_LEVEL\" inject-files /var/workdir/cachi2/output \\\n  --for-output-dir=/cachi2/output\n\n# hack: the OCI generator would delete the function since it doesn't consider trap a \"usage\"\nif false; then\n  rhsm_unregister\nfi\n", "environment":{"container":"prefetch-dependencies", "image":"oci://quay.io/konflux-ci/cachi2@sha256:dabaeed7101209cfc7066e26301b12de2b72a2d943691537f598f7ad8c818dc9"}}, {"annotations":null, "arguments":["create", "--store", "quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17.prefetch", "/tekton/results/SOURCE_ARTIFACT=/var/workdir/source", "/tekton/results/CACHI2_ARTIFACT=/var/workdir/cachi2"], "entryPoint":"", "environment":{"container":"create-trusted-artifact", "image":"oci://quay.io/konflux-ci/build-trusted-artifacts@sha256:23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}}]}, {"after":["prefetch-dependencies", "clone-repository", "init"], "finishedOn":"2025-03-25T13:37:58Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"image-build, konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-115e35b6c5a23765-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "build.appstudio.redhat.com/build_type":"docker", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"build-container", "tekton.dev/task":"buildah-oci-ta"}}, "parameters":{"ACTIVATION_KEY":"activation-key", "ADDITIONAL_SECRET":"does-not-exist", "ADD_CAPABILITIES":"", "ANNOTATIONS":[], "BUILDAH_FORMAT":"oci", "BUILD_ARGS":[], "BUILD_ARGS_FILE":"", "CACHI2_ARTIFACT":"", "COMMIT_SHA":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "CONTEXT":".", "DOCKERFILE":"Dockerfile", "ENTITLEMENT_SECRET":"etc-pki-entitlement", "HERMETIC":"false", "IMAGE":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "IMAGE_EXPIRES_AFTER":"", "LABELS":[], "PREFETCH_INPUT":"", "PRIVILEGED_NESTED":"false", "SBOM_TYPE":"spdx", "SKIP_SBOM_GENERATION":"false", "SKIP_UNUSED_STAGES":"true", "SOURCE_ARTIFACT":"oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf", "SQUASH":"false", "STORAGE_DRIVER":"vfs", "TARGET_STAGE":"", "TLSVERIFY":"true", "YUM_REPOS_D_FETCHED":"fetched.repos.d", "YUM_REPOS_D_SRC":"repos.d", "YUM_REPOS_D_TARGET":"/etc/yum.repos.d", "caTrustConfigMapKey":"ca-bundle.crt", "caTrustConfigMapName":"trusted-ca"}}, "name":"build-container", "ref":{"params":[{"name":"name", "value":"buildah-oci-ta"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-buildah-oci-ta:0.4@sha256:8abdd666a032d7088f31d0dbaa2a8ea07b85d814d08d157bb3ffa344dca5485a"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"IMAGE_DIGEST", "type":"string", "value":"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9"}, {"name":"IMAGE_REF", "type":"string", "value":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17@sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9"}, {"name":"IMAGE_URL", "type":"string", "value":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17"}, {"name":"SBOM_BLOB_URL", "type":"string", "value":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:3d993afffa475ffb96171d930b01a08db0ad219475e644f80f1a4d97b6a9d035"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:35:01Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":["use", "oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf=/var/workdir/source", "=/var/workdir/cachi2"], "entryPoint":"", "environment":{"container":"use-trusted-artifact", "image":"oci://quay.io/konflux-ci/build-trusted-artifacts@sha256:23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}}, {"annotations":null, "arguments":["--build-args", "--labels", "--annotations"], "entryPoint":"#!/bin/bash\nset -euo pipefail\nca_bundle=/mnt/trusted-ca/ca-bundle.crt\nif [ -f \"$ca_bundle\" ]; then\n  echo \"INFO: Using mounted CA bundle: $ca_bundle\"\n  cp -vf $ca_bundle /etc/pki/ca-trust/source/anchors\n  update-ca-trust\nfi\n\nif [ -e \"$SOURCE_CODE_DIR/$CONTEXT/$DOCKERFILE\" ]; then\n  dockerfile_path=\"$(pwd)/$SOURCE_CODE_DIR/$CONTEXT/$DOCKERFILE\"\nelif [ -e \"$SOURCE_CODE_DIR/$DOCKERFILE\" ]; then\n  dockerfile_path=\"$(pwd)/$SOURCE_CODE_DIR/$DOCKERFILE\"\nelif [ -e \"$DOCKERFILE\" ]; then\n  # Instrumented builds (SAST) use this custom dockerfile step as their base\n  dockerfile_path=\"$DOCKERFILE\"\nelif echo \"$DOCKERFILE\" | grep -q \"^https\\?://\"; then\n  echo \"Fetch Dockerfile from $DOCKERFILE\"\n  dockerfile_path=$(mktemp --suffix=-Dockerfile)\n  http_code=$(curl -s -S -L -w \"%{http_code}\" --output \"$dockerfile_path\" \"$DOCKERFILE\")\n  if [ \"$http_code\" != 200 ]; then\n    echo \"No Dockerfile is fetched. Server responds $http_code\"\n    exit 1\n  fi\n  http_code=$(curl -s -S -L -w \"%{http_code}\" --output \"$dockerfile_path.dockerignore.tmp\" \"$DOCKERFILE.dockerignore\")\n  if [ \"$http_code\" = 200 ]; then\n    echo \"Fetched .dockerignore from $DOCKERFILE.dockerignore\"\n    mv \"$dockerfile_path.dockerignore.tmp\" \"$SOURCE_CODE_DIR/$CONTEXT/.dockerignore\"\n  fi\nelse\n  echo \"Cannot find Dockerfile $DOCKERFILE\"\n  exit 1\nfi\n\ndockerfile_copy=$(mktemp --tmpdir \"$(basename \"$dockerfile_path\").XXXXXX\")\ncp \"$dockerfile_path\" \"$dockerfile_copy\"\n\n# Fixing group permission on /var/lib/containers\nchown root:root /var/lib/containers\n\nsed -i 's/^\\s*short-name-mode\\s*=\\s*.*/short-name-mode = \"disabled\"/' /etc/containers/registries.conf\n\n# Setting new namespace to run buildah - 2^32-2\necho 'root:1:4294967294' | tee -a /etc/subuid >>/etc/subgid\n\nbuild_args=()\nif [ -n \"${BUILD_ARGS_FILE}\" ]; then\n  # Parse BUILD_ARGS_FILE ourselves because dockerfile-json doesn't support it\n  echo \"Parsing ARGs from $BUILD_ARGS_FILE\"\n  mapfile -t build_args < <(\n    # https://www.mankier.com/1/buildah-build#--build-arg-file\n    # delete lines that start with #\n    # delete blank lines\n    sed -e '/^#/d' -e '/^\\s*$/d' \"${SOURCE_CODE_DIR}/${BUILD_ARGS_FILE}\"\n  )\nfi\n\nLABELS=()\nANNOTATIONS=()\n# Split `args` into two sets of arguments.\nwhile [[ $# -gt 0 ]]; do\n  case $1 in\n  --build-args)\n    shift\n    # Note: this may result in multiple --build-arg=KEY=value flags with the same KEY being\n    # passed to buildah. In that case, the *last* occurrence takes precedence. This is why\n    # we append BUILD_ARGS after the content of the BUILD_ARGS_FILE\n    while [[ $# -gt 0 && $1 != --* ]]; do\n      build_args+=(\"$1\")\n      shift\n    done\n    ;;\n  --labels)\n    shift\n    while [[ $# -gt 0 && $1 != --* ]]; do\n      LABELS+=(\"--label\" \"$1\")\n      shift\n    done\n    ;;\n  --annotations)\n    shift\n    while [[ $# -gt 0 && $1 != --* ]]; do\n      ANNOTATIONS+=(\"--annotation\" \"$1\")\n      shift\n    done\n    ;;\n  *)\n    echo \"unexpected argument: $1\" >&2\n    exit 2\n    ;;\n  esac\ndone\n\nBUILD_ARG_FLAGS=()\nfor build_arg in \"${build_args[@]}\"; do\n  BUILD_ARG_FLAGS+=(\"--build-arg=$build_arg\")\ndone\n\ndockerfile-json \"${BUILD_ARG_FLAGS[@]}\" \"$dockerfile_copy\" >/shared/parsed_dockerfile.json\nBASE_IMAGES=$(\n  jq -r '.Stages[] | select(.From | .Stage or .Scratch | not) | .BaseName | select(test(\"^oci-archive:\") | not)' /shared/parsed_dockerfile.json |\n    tr -d '\"' |\n    tr -d \"'\"\n)\n\nBUILDAH_ARGS=()\nUNSHARE_ARGS=()\n\nif [ \"${HERMETIC}\" == \"true\" ]; then\n  BUILDAH_ARGS+=(\"--pull=never\")\n  UNSHARE_ARGS+=(\"--net\")\n\n  for image in $BASE_IMAGES; do\n    unshare -Ufp --keep-caps -r --map-users 1,1,65536 --map-groups 1,1,65536 -- buildah pull \"$image\"\n  done\n  echo \"Build will be executed with network isolation\"\nfi\n\nif [ -n \"${TARGET_STAGE}\" ]; then\n  BUILDAH_ARGS+=(\"--target=${TARGET_STAGE}\")\nfi\n\nBUILDAH_ARGS+=(\"${BUILD_ARG_FLAGS[@]}\")\n\nif [ \"${PRIVILEGED_NESTED}\" == \"true\" ]; then\n  BUILDAH_ARGS+=(\"--security-opt=label=disable\")\n  BUILDAH_ARGS+=(\"--cap-add=all\")\n  BUILDAH_ARGS+=(\"--device=/dev/fuse\")\nfi\n\nif [ -n \"${ADD_CAPABILITIES}\" ]; then\n  BUILDAH_ARGS+=(\"--cap-add=${ADD_CAPABILITIES}\")\nfi\n\nif [ \"${SQUASH}\" == \"true\" ]; then\n  BUILDAH_ARGS+=(\"--squash\")\nfi\n\nif [ \"${SKIP_UNUSED_STAGES}\" != \"true\" ]; then\n  BUILDAH_ARGS+=(\"--skip-unused-stages=false\")\nfi\n\nVOLUME_MOUNTS=()\n\nif [ -f \"/var/workdir/cachi2/cachi2.env\" ]; then\n  cp -r \"/var/workdir/cachi2\" /tmp/\n  chmod -R go+rwX /tmp/cachi2\n  VOLUME_MOUNTS+=(--volume /tmp/cachi2:/cachi2)\n  # Read in the whole file (https://unix.stackexchange.com/questions/533277), then\n  # for each RUN ... line insert the cachi2.env command *after* any options like --mount\n  sed -E -i \\\n    -e 'H;1h;$!d;x' \\\n    -e 's@^\\s*(run((\\s|\\\\\\n)+-\\S+)*(\\s|\\\\\\n)+)@\\1. /cachi2/cachi2.env \\&\\& \\\\\\n    @igM' \\\n    \"$dockerfile_copy\"\n  echo \"Prefetched content will be made available\"\n\n  prefetched_repo_for_my_arch=\"/tmp/cachi2/output/deps/rpm/$(uname -m)/repos.d/cachi2.repo\"\n  if [ -f \"$prefetched_repo_for_my_arch\" ]; then\n    echo \"Adding $prefetched_repo_for_my_arch to $YUM_REPOS_D_FETCHED\"\n    mkdir -p \"$YUM_REPOS_D_FETCHED\"\n    cp --no-clobber \"$prefetched_repo_for_my_arch\" \"$YUM_REPOS_D_FETCHED\"\n  fi\nfi\n\n# if yum repofiles stored in git, copy them to mount point outside the source dir\nif [ -d \"${SOURCE_CODE_DIR}/${YUM_REPOS_D_SRC}\" ]; then\n  mkdir -p \"${YUM_REPOS_D_FETCHED}\"\n  cp -r \"${SOURCE_CODE_DIR}/${YUM_REPOS_D_SRC}\"/* \"${YUM_REPOS_D_FETCHED}\"\nfi\n\n# if anything in the repofiles mount point (either fetched or from git), mount it\nif [ -d \"${YUM_REPOS_D_FETCHED}\" ]; then\n  chmod -R go+rwX \"${YUM_REPOS_D_FETCHED}\"\n  mount_point=$(realpath \"${YUM_REPOS_D_FETCHED}\")\n  VOLUME_MOUNTS+=(--volume \"${mount_point}:${YUM_REPOS_D_TARGET}\")\nfi\n\nDEFAULT_LABELS=(\n  \"--label\" \"build-date=$(date -u +'%Y-%m-%dT%H:%M:%S')\"\n  \"--label\" \"architecture=$(uname -m)\"\n  \"--label\" \"vcs-type=git\"\n)\n[ -n \"$COMMIT_SHA\" ] && DEFAULT_LABELS+=(\"--label\" \"vcs-ref=$COMMIT_SHA\")\n[ -n \"$IMAGE_EXPIRES_AFTER\" ] && DEFAULT_LABELS+=(\"--label\" \"quay.expires-after=$IMAGE_EXPIRES_AFTER\")\n\n# Concatenate defaults and explicit labels. If a label appears twice, the last one wins.\nLABELS=(\"${DEFAULT_LABELS[@]}\" \"${LABELS[@]}\")\n\nACTIVATION_KEY_PATH=\"/activation-key\"\nENTITLEMENT_PATH=\"/entitlement\"\n\n# 0. if hermetic=true, skip all subscription related stuff\n# 1. do not enable activation key and entitlement at same time. If both vars are provided, prefer activation key.\n# 2. Activation-keys will be used when the key 'org' exists in the activation key secret.\n# 3. try to pre-register and mount files to the correct location so that users do no need to modify Dockerfiles.\n# 3. If the Dockerfile contains the string \"subcription-manager register\", add the activation-keys volume\n#    to buildah but don't pre-register for backwards compatibility. Mount an empty directory on\n#    shared emptydir volume to \"/etc/pki/entitlement\" to prevent certificates from being included\n\nif [ \"${HERMETIC}\" != \"true\" ] && [ -e /activation-key/org ]; then\n  cp -r --preserve=mode \"$ACTIVATION_KEY_PATH\" /tmp/activation-key\n  mkdir -p /shared/rhsm/etc/pki/entitlement\n  mkdir -p /shared/rhsm/etc/pki/consumer\n\n  VOLUME_MOUNTS+=(-v /tmp/activation-key:/activation-key\n    -v /shared/rhsm/etc/pki/entitlement:/etc/pki/entitlement:Z\n    -v /shared/rhsm/etc/pki/consumer:/etc/pki/consumer:Z)\n  echo \"Adding activation key to the build\"\n\n  if ! grep -E \"^[^#]*subscription-manager.[^#]*register\" \"$dockerfile_path\"; then\n    # user is not running registration in the Containerfile: pre-register.\n    echo \"Pre-registering with subscription manager.\"\n    subscription-manager register --org \"$(cat /tmp/activation-key/org)\" --activationkey \"$(cat /tmp/activation-key/activationkey)\"\n    trap 'subscription-manager unregister || true' EXIT\n\n    # copy generated certificates to /shared volume\n    cp /etc/pki/entitlement/*.pem /shared/rhsm/etc/pki/entitlement\n    cp /etc/pki/consumer/*.pem /shared/rhsm/etc/pki/consumer\n\n    # and then mount get /etc/rhsm/ca/redhat-uep.pem into /run/secrets/rhsm/ca\n    VOLUME_MOUNTS+=(--volume /etc/rhsm/ca/redhat-uep.pem:/etc/rhsm/ca/redhat-uep.pem:Z)\n  fi\n\nelif [ \"${HERMETIC}\" != \"true\" ] && find /entitlement -name \"*.pem\" >>null; then\n  cp -r --preserve=mode \"$ENTITLEMENT_PATH\" /tmp/entitlement\n  VOLUME_MOUNTS+=(--volume /tmp/entitlement:/etc/pki/entitlement)\n  echo \"Adding the entitlement to the build\"\nfi\n\nif [ -n \"${ADDITIONAL_VOLUME_MOUNTS-}\" ]; then\n  # ADDITIONAL_VOLUME_MOUNTS allows to specify more volumes for the build.\n  # Instrumented builds (SAST) use this step as their base and add some other tools.\n  while read -r volume_mount; do\n    VOLUME_MOUNTS+=(\"--volume=$volume_mount\")\n  done <<<\"$ADDITIONAL_VOLUME_MOUNTS\"\nfi\n\nADDITIONAL_SECRET_PATH=\"/additional-secret\"\nADDITIONAL_SECRET_TMP=\"/tmp/additional-secret\"\nif [ -d \"$ADDITIONAL_SECRET_PATH\" ]; then\n  cp -r --preserve=mode -L \"$ADDITIONAL_SECRET_PATH\" $ADDITIONAL_SECRET_TMP\n  while read -r filename; do\n    echo \"Adding the secret ${ADDITIONAL_SECRET}/${filename} to the build, available at /run/secrets/${ADDITIONAL_SECRET}/${filename}\"\n    BUILDAH_ARGS+=(\"--secret=id=${ADDITIONAL_SECRET}/${filename},src=$ADDITIONAL_SECRET_TMP/${filename}\")\n  done < <(find $ADDITIONAL_SECRET_TMP -maxdepth 1 -type f -exec basename {} \\;)\nfi\n\n# Prevent ShellCheck from giving a warning because 'image' is defined and 'IMAGE' is not.\ndeclare IMAGE\n\nbuildah_cmd_array=(\n  buildah build\n  \"${VOLUME_MOUNTS[@]}\"\n  \"${BUILDAH_ARGS[@]}\"\n  \"${LABELS[@]}\"\n  \"${ANNOTATIONS[@]}\"\n  --tls-verify=\"$TLSVERIFY\" --no-cache\n  --ulimit nofile=4096:4096\n  -f \"$dockerfile_copy\" -t \"$IMAGE\" .\n)\nbuildah_cmd=$(printf \"%q \" \"${buildah_cmd_array[@]}\")\n\nif [ \"${HERMETIC}\" == \"true\" ]; then\n  # enabling loopback adapter enables Bazel builds to work in hermetic mode.\n  command=\"ip link set lo up && $buildah_cmd\"\nelse\n  command=\"$buildah_cmd\"\nfi\n\n# disable host subcription manager integration\nfind /usr/share/rhel/secrets -type l -exec unlink {} \\;\n\nunshare -Uf \"${UNSHARE_ARGS[@]}\" --keep-caps -r --map-users 1,1,65536 --map-groups 1,1,65536 -w \"${SOURCE_CODE_DIR}/$CONTEXT\" -- sh -c \"$command\"\n\ncontainer=$(buildah from --pull-never \"$IMAGE\")\n\n# Save the SBOM produced by Cachi2 so it can be merged into the final SBOM later\nif [ -f \"/tmp/cachi2/output/bom.json\" ]; then\n  echo \"Making copy of sbom-cachi2.json\"\n  cp /tmp/cachi2/output/bom.json ./sbom-cachi2.json\nfi\n\nbuildah mount \"$container\" | tee /shared/container_path\n# delete symlinks - they may point outside the container rootfs, messing with SBOM scanners\nfind $(cat /shared/container_path) -xtype l -delete\necho $container >/shared/container_name\n\ntouch /shared/base_images_digests\necho \"Recording base image digests used\"\nfor image in $BASE_IMAGES; do\n  base_image_digest=$(buildah images --format '{{ .Name }}:{{ .Tag }}@{{ .Digest }}' --filter reference=\"$image\")\n  # In some cases, there might be BASE_IMAGES, but not any associated digest. This happens\n  # if buildah did not use that particular image during build because it was skipped\n  if [ -n \"$base_image_digest\" ]; then\n    echo \"$image $base_image_digest\" | tee -a /shared/base_images_digests\n  fi\ndone\n", "environment":{"container":"build", "image":"oci://quay.io/konflux-ci/buildah-task@sha256:3d8f5fe17878a5325bf276e89ecfc17ed6d22a18b49a6255ffdf498ce94d9802"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nset -euo pipefail\n/scripts/inject-icm.sh \"$IMAGE\"\n", "environment":{"container":"icm", "image":"oci://quay.io/konflux-ci/icm-injection-scripts@sha256:fbab9755f6324ddb8667aefb359e22e9e0119dab5434cf6fb5ddcaaf307d2cac"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nset -e\n\nca_bundle=/mnt/trusted-ca/ca-bundle.crt\nif [ -f \"$ca_bundle\" ]; then\n  echo \"INFO: Using mounted CA bundle: $ca_bundle\"\n  cp -vf $ca_bundle /etc/pki/ca-trust/source/anchors\n  update-ca-trust\nfi\n\n# While we can build images with the desired format, we will simplify any local\n# and remote build differences by just performing any necessary conversions at\n# push time.\npush_format=oci\nif [ \"${BUILDAH_FORMAT}\" == \"docker\" ]; then\n  push_format=docker\nfi\n\nretries=5\n# Push to a unique tag based on the TaskRun name to avoid race conditions\necho \"Pushing to ${IMAGE%:*}:${TASKRUN_NAME}\"\nif ! buildah push \\\n  --format=\"$push_format\" \\\n  --retry \"$retries\" \\\n  --tls-verify=\"$TLSVERIFY\" \\\n  \"$IMAGE\" \\\n  \"docker://${IMAGE%:*}:integration-service-on-push-nw92j-build-container\"; then\n  echo \"Failed to push sbom image to ${IMAGE%:*}:integration-service-on-push-nw92j-build-container after ${retries} tries\"\n  exit 1\nfi\n\n# Push to a tag based on the git revision\necho \"Pushing to ${IMAGE}\"\nif ! buildah push \\\n  --format=\"$push_format\" \\\n  --retry \"$retries\" \\\n  --tls-verify=\"$TLSVERIFY\" \\\n  --digestfile \"/var/workdir/image-digest\" \"$IMAGE\" \\\n  \"docker://$IMAGE\"; then\n  echo \"Failed to push sbom image to $IMAGE after ${retries} tries\"\n  exit 1\nfi\n\ncat \"/var/workdir\"/image-digest | tee /tekton/results/IMAGE_DIGEST\necho -n \"$IMAGE\" | tee /tekton/results/IMAGE_URL\n{\n  echo -n \"${IMAGE}@\"\n  cat \"/var/workdir/image-digest\"\n} >\"/tekton/results/IMAGE_REF\"\n", "environment":{"container":"push", "image":"oci://quay.io/konflux-ci/buildah-task@sha256:3d8f5fe17878a5325bf276e89ecfc17ed6d22a18b49a6255ffdf498ce94d9802"}}, {"annotations":null, "arguments":null, "entryPoint":"if [ \"${SKIP_SBOM_GENERATION}\" = \"true\" ]; then\n  echo \"Skipping SBOM generation\"\n  exit 0\nfi\n\ncase $SBOM_TYPE in\ncyclonedx)\n  syft_sbom_type=cyclonedx-json@1.5\n  ;;\nspdx)\n  syft_sbom_type=spdx-json@2.3\n  ;;\n*)\n  echo \"Invalid SBOM type: $SBOM_TYPE. Valid: cyclonedx, spdx\" >&2\n  exit 1\n  ;;\nesac\n\necho \"Running syft on the source directory\"\nsyft dir:\"/var/workdir/$SOURCE_CODE_DIR/$CONTEXT\" --output \"$syft_sbom_type\"=\"/var/workdir/sbom-source.json\"\necho \"Running syft on the image filesystem\"\nsyft dir:\"$(cat /shared/container_path)\" --output \"$syft_sbom_type\"=\"/var/workdir/sbom-image.json\"\n", "environment":{"container":"sbom-syft-generate", "image":"oci://registry.access.redhat.com/rh-syft-tech-preview/syft-rhel9@sha256:070ecb89de5104bb64fbf399a991a975e7d4d7e0cea0f7beb1e591b5591991c8"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nset -euo pipefail\n\nif [ \"${SKIP_SBOM_GENERATION}\" = \"true\" ]; then\n  echo \"Skipping SBOM generation\"\n  exit 0\nfi\n\nsboms_to_merge=(syft:sbom-source.json syft:sbom-image.json)\n\nif [ -f \"sbom-cachi2.json\" ]; then\n  sboms_to_merge+=(cachi2:sbom-cachi2.json)\nfi\n\necho \"Merging sboms: (${sboms_to_merge[*]}) => sbom.json\"\npython3 /scripts/merge_sboms.py \"${sboms_to_merge[@]}\" >sbom.json\n\necho \"Adding image reference to sbom\"\nIMAGE_URL=\"$(cat \"/tekton/results/IMAGE_URL\")\"\nIMAGE_DIGEST=\"$(cat \"/tekton/results/IMAGE_DIGEST\")\"\n\npython3 /scripts/add_image_reference.py \\\n  --image-url \"$IMAGE_URL\" \\\n  --image-digest \"$IMAGE_DIGEST\" \\\n  --input-file sbom.json \\\n  --output-file /tmp/sbom.tmp.json\n\nmv /tmp/sbom.tmp.json sbom.json\n\necho \"Adding base images data to sbom.json\"\npython3 /scripts/base_images_sbom_script.py \\\n  --sbom=sbom.json \\\n  --parsed-dockerfile=/shared/parsed_dockerfile.json \\\n  --base-images-digests=/shared/base_images_digests\n", "environment":{"container":"prepare-sboms", "image":"oci://quay.io/konflux-ci/sbom-utility-scripts@sha256:0b7da5a5131a9663a06dd2c8dea4f6eb69912ec2c7ba66a24995d39fcdd9bc08"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nif [ \"${SKIP_SBOM_GENERATION}\" = \"true\" ]; then\n  echo \"Skipping SBOM generation\"\n  exit 0\nfi\n\nca_bundle=/mnt/trusted-ca/ca-bundle.crt\nif [ -f \"$ca_bundle\" ]; then\n  echo \"INFO: Using mounted CA bundle: $ca_bundle\"\n  cp -vf $ca_bundle /etc/pki/ca-trust/source/anchors\n  update-ca-trust\nfi\n\ncosign attach sbom --sbom sbom.json --type \"$SBOM_TYPE\" \"$(cat \"/tekton/results/IMAGE_REF\")\"\n\n# Remove tag from IMAGE while allowing registry to contain a port number.\nsbom_repo=\"${IMAGE%:*}\"\nsbom_digest=\"$(sha256sum sbom.json | cut -d' ' -f1)\"\n# The SBOM_BLOB_URL is created by `cosign attach sbom`.\necho -n \"${sbom_repo}@sha256:${sbom_digest}\" | tee \"/tekton/results/SBOM_BLOB_URL\"\n", "environment":{"container":"upload-sbom", "image":"oci://quay.io/konflux-ci/appstudio-utils@sha256:91ddd999271f65d8ec8487b10f3dd378f81aa894e11b9af4d10639fd52bba7e8"}}]}, {"after":["sealights-go-instrumentation", "prefetch-dependencies", "clone-repository", "init"], "finishedOn":"2025-03-25T13:40:03Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"image-build, konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-12455096c47a2932-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "build.appstudio.redhat.com/build_type":"docker", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"build-sealights-container", "tekton.dev/task":"buildah-oci-ta"}}, "parameters":{"ACTIVATION_KEY":"activation-key", "ADDITIONAL_SECRET":"does-not-exist", "ADD_CAPABILITIES":"", "ANNOTATIONS":[], "BUILDAH_FORMAT":"oci", "BUILD_ARGS":[], "BUILD_ARGS_FILE":"", "CACHI2_ARTIFACT":"", "COMMIT_SHA":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "CONTEXT":".", "DOCKERFILE":"Dockerfile", "ENTITLEMENT_SECRET":"etc-pki-entitlement", "HERMETIC":"false", "IMAGE":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17.sealights", "IMAGE_EXPIRES_AFTER":"", "LABELS":[], "PREFETCH_INPUT":"", "PRIVILEGED_NESTED":"false", "SBOM_TYPE":"spdx", "SKIP_SBOM_GENERATION":"false", "SKIP_UNUSED_STAGES":"true", "SOURCE_ARTIFACT":"oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:f8d60780bbdf0bc75e3fea4385231f5a4a28386132b63e0be74c25af32682c8b", "SQUASH":"false", "STORAGE_DRIVER":"vfs", "TARGET_STAGE":"", "TLSVERIFY":"true", "YUM_REPOS_D_FETCHED":"fetched.repos.d", "YUM_REPOS_D_SRC":"repos.d", "YUM_REPOS_D_TARGET":"/etc/yum.repos.d", "caTrustConfigMapKey":"ca-bundle.crt", "caTrustConfigMapName":"trusted-ca"}}, "name":"build-sealights-container", "ref":{"params":[{"name":"name", "value":"buildah-oci-ta"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-buildah-oci-ta:0.4@sha256:8abdd666a032d7088f31d0dbaa2a8ea07b85d814d08d157bb3ffa344dca5485a"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"IMAGE_DIGEST", "type":"string", "value":"sha256:e9e6f7e62bebaa2f0b57d5bb2747c9ea34f15afce888cd7a0c22807bd59cf128"}, {"name":"IMAGE_REF", "type":"string", "value":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17.sealights@sha256:e9e6f7e62bebaa2f0b57d5bb2747c9ea34f15afce888cd7a0c22807bd59cf128"}, {"name":"IMAGE_URL", "type":"string", "value":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17.sealights"}, {"name":"SBOM_BLOB_URL", "type":"string", "value":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:9ee0d69de2195274aaeaf5df7417e38173d47d195ec552077b5b1b8efce82234"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:37:28Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":["use", "oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:f8d60780bbdf0bc75e3fea4385231f5a4a28386132b63e0be74c25af32682c8b=/var/workdir/source", "=/var/workdir/cachi2"], "entryPoint":"", "environment":{"container":"use-trusted-artifact", "image":"oci://quay.io/konflux-ci/build-trusted-artifacts@sha256:23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}}, {"annotations":null, "arguments":["--build-args", "--labels", "--annotations"], "entryPoint":"#!/bin/bash\nset -euo pipefail\nca_bundle=/mnt/trusted-ca/ca-bundle.crt\nif [ -f \"$ca_bundle\" ]; then\n  echo \"INFO: Using mounted CA bundle: $ca_bundle\"\n  cp -vf $ca_bundle /etc/pki/ca-trust/source/anchors\n  update-ca-trust\nfi\n\nif [ -e \"$SOURCE_CODE_DIR/$CONTEXT/$DOCKERFILE\" ]; then\n  dockerfile_path=\"$(pwd)/$SOURCE_CODE_DIR/$CONTEXT/$DOCKERFILE\"\nelif [ -e \"$SOURCE_CODE_DIR/$DOCKERFILE\" ]; then\n  dockerfile_path=\"$(pwd)/$SOURCE_CODE_DIR/$DOCKERFILE\"\nelif [ -e \"$DOCKERFILE\" ]; then\n  # Instrumented builds (SAST) use this custom dockerfile step as their base\n  dockerfile_path=\"$DOCKERFILE\"\nelif echo \"$DOCKERFILE\" | grep -q \"^https\\?://\"; then\n  echo \"Fetch Dockerfile from $DOCKERFILE\"\n  dockerfile_path=$(mktemp --suffix=-Dockerfile)\n  http_code=$(curl -s -S -L -w \"%{http_code}\" --output \"$dockerfile_path\" \"$DOCKERFILE\")\n  if [ \"$http_code\" != 200 ]; then\n    echo \"No Dockerfile is fetched. Server responds $http_code\"\n    exit 1\n  fi\n  http_code=$(curl -s -S -L -w \"%{http_code}\" --output \"$dockerfile_path.dockerignore.tmp\" \"$DOCKERFILE.dockerignore\")\n  if [ \"$http_code\" = 200 ]; then\n    echo \"Fetched .dockerignore from $DOCKERFILE.dockerignore\"\n    mv \"$dockerfile_path.dockerignore.tmp\" \"$SOURCE_CODE_DIR/$CONTEXT/.dockerignore\"\n  fi\nelse\n  echo \"Cannot find Dockerfile $DOCKERFILE\"\n  exit 1\nfi\n\ndockerfile_copy=$(mktemp --tmpdir \"$(basename \"$dockerfile_path\").XXXXXX\")\ncp \"$dockerfile_path\" \"$dockerfile_copy\"\n\n# Fixing group permission on /var/lib/containers\nchown root:root /var/lib/containers\n\nsed -i 's/^\\s*short-name-mode\\s*=\\s*.*/short-name-mode = \"disabled\"/' /etc/containers/registries.conf\n\n# Setting new namespace to run buildah - 2^32-2\necho 'root:1:4294967294' | tee -a /etc/subuid >>/etc/subgid\n\nbuild_args=()\nif [ -n \"${BUILD_ARGS_FILE}\" ]; then\n  # Parse BUILD_ARGS_FILE ourselves because dockerfile-json doesn't support it\n  echo \"Parsing ARGs from $BUILD_ARGS_FILE\"\n  mapfile -t build_args < <(\n    # https://www.mankier.com/1/buildah-build#--build-arg-file\n    # delete lines that start with #\n    # delete blank lines\n    sed -e '/^#/d' -e '/^\\s*$/d' \"${SOURCE_CODE_DIR}/${BUILD_ARGS_FILE}\"\n  )\nfi\n\nLABELS=()\nANNOTATIONS=()\n# Split `args` into two sets of arguments.\nwhile [[ $# -gt 0 ]]; do\n  case $1 in\n  --build-args)\n    shift\n    # Note: this may result in multiple --build-arg=KEY=value flags with the same KEY being\n    # passed to buildah. In that case, the *last* occurrence takes precedence. This is why\n    # we append BUILD_ARGS after the content of the BUILD_ARGS_FILE\n    while [[ $# -gt 0 && $1 != --* ]]; do\n      build_args+=(\"$1\")\n      shift\n    done\n    ;;\n  --labels)\n    shift\n    while [[ $# -gt 0 && $1 != --* ]]; do\n      LABELS+=(\"--label\" \"$1\")\n      shift\n    done\n    ;;\n  --annotations)\n    shift\n    while [[ $# -gt 0 && $1 != --* ]]; do\n      ANNOTATIONS+=(\"--annotation\" \"$1\")\n      shift\n    done\n    ;;\n  *)\n    echo \"unexpected argument: $1\" >&2\n    exit 2\n    ;;\n  esac\ndone\n\nBUILD_ARG_FLAGS=()\nfor build_arg in \"${build_args[@]}\"; do\n  BUILD_ARG_FLAGS+=(\"--build-arg=$build_arg\")\ndone\n\ndockerfile-json \"${BUILD_ARG_FLAGS[@]}\" \"$dockerfile_copy\" >/shared/parsed_dockerfile.json\nBASE_IMAGES=$(\n  jq -r '.Stages[] | select(.From | .Stage or .Scratch | not) | .BaseName | select(test(\"^oci-archive:\") | not)' /shared/parsed_dockerfile.json |\n    tr -d '\"' |\n    tr -d \"'\"\n)\n\nBUILDAH_ARGS=()\nUNSHARE_ARGS=()\n\nif [ \"${HERMETIC}\" == \"true\" ]; then\n  BUILDAH_ARGS+=(\"--pull=never\")\n  UNSHARE_ARGS+=(\"--net\")\n\n  for image in $BASE_IMAGES; do\n    unshare -Ufp --keep-caps -r --map-users 1,1,65536 --map-groups 1,1,65536 -- buildah pull \"$image\"\n  done\n  echo \"Build will be executed with network isolation\"\nfi\n\nif [ -n \"${TARGET_STAGE}\" ]; then\n  BUILDAH_ARGS+=(\"--target=${TARGET_STAGE}\")\nfi\n\nBUILDAH_ARGS+=(\"${BUILD_ARG_FLAGS[@]}\")\n\nif [ \"${PRIVILEGED_NESTED}\" == \"true\" ]; then\n  BUILDAH_ARGS+=(\"--security-opt=label=disable\")\n  BUILDAH_ARGS+=(\"--cap-add=all\")\n  BUILDAH_ARGS+=(\"--device=/dev/fuse\")\nfi\n\nif [ -n \"${ADD_CAPABILITIES}\" ]; then\n  BUILDAH_ARGS+=(\"--cap-add=${ADD_CAPABILITIES}\")\nfi\n\nif [ \"${SQUASH}\" == \"true\" ]; then\n  BUILDAH_ARGS+=(\"--squash\")\nfi\n\nif [ \"${SKIP_UNUSED_STAGES}\" != \"true\" ]; then\n  BUILDAH_ARGS+=(\"--skip-unused-stages=false\")\nfi\n\nVOLUME_MOUNTS=()\n\nif [ -f \"/var/workdir/cachi2/cachi2.env\" ]; then\n  cp -r \"/var/workdir/cachi2\" /tmp/\n  chmod -R go+rwX /tmp/cachi2\n  VOLUME_MOUNTS+=(--volume /tmp/cachi2:/cachi2)\n  # Read in the whole file (https://unix.stackexchange.com/questions/533277), then\n  # for each RUN ... line insert the cachi2.env command *after* any options like --mount\n  sed -E -i \\\n    -e 'H;1h;$!d;x' \\\n    -e 's@^\\s*(run((\\s|\\\\\\n)+-\\S+)*(\\s|\\\\\\n)+)@\\1. /cachi2/cachi2.env \\&\\& \\\\\\n    @igM' \\\n    \"$dockerfile_copy\"\n  echo \"Prefetched content will be made available\"\n\n  prefetched_repo_for_my_arch=\"/tmp/cachi2/output/deps/rpm/$(uname -m)/repos.d/cachi2.repo\"\n  if [ -f \"$prefetched_repo_for_my_arch\" ]; then\n    echo \"Adding $prefetched_repo_for_my_arch to $YUM_REPOS_D_FETCHED\"\n    mkdir -p \"$YUM_REPOS_D_FETCHED\"\n    cp --no-clobber \"$prefetched_repo_for_my_arch\" \"$YUM_REPOS_D_FETCHED\"\n  fi\nfi\n\n# if yum repofiles stored in git, copy them to mount point outside the source dir\nif [ -d \"${SOURCE_CODE_DIR}/${YUM_REPOS_D_SRC}\" ]; then\n  mkdir -p \"${YUM_REPOS_D_FETCHED}\"\n  cp -r \"${SOURCE_CODE_DIR}/${YUM_REPOS_D_SRC}\"/* \"${YUM_REPOS_D_FETCHED}\"\nfi\n\n# if anything in the repofiles mount point (either fetched or from git), mount it\nif [ -d \"${YUM_REPOS_D_FETCHED}\" ]; then\n  chmod -R go+rwX \"${YUM_REPOS_D_FETCHED}\"\n  mount_point=$(realpath \"${YUM_REPOS_D_FETCHED}\")\n  VOLUME_MOUNTS+=(--volume \"${mount_point}:${YUM_REPOS_D_TARGET}\")\nfi\n\nDEFAULT_LABELS=(\n  \"--label\" \"build-date=$(date -u +'%Y-%m-%dT%H:%M:%S')\"\n  \"--label\" \"architecture=$(uname -m)\"\n  \"--label\" \"vcs-type=git\"\n)\n[ -n \"$COMMIT_SHA\" ] && DEFAULT_LABELS+=(\"--label\" \"vcs-ref=$COMMIT_SHA\")\n[ -n \"$IMAGE_EXPIRES_AFTER\" ] && DEFAULT_LABELS+=(\"--label\" \"quay.expires-after=$IMAGE_EXPIRES_AFTER\")\n\n# Concatenate defaults and explicit labels. If a label appears twice, the last one wins.\nLABELS=(\"${DEFAULT_LABELS[@]}\" \"${LABELS[@]}\")\n\nACTIVATION_KEY_PATH=\"/activation-key\"\nENTITLEMENT_PATH=\"/entitlement\"\n\n# 0. if hermetic=true, skip all subscription related stuff\n# 1. do not enable activation key and entitlement at same time. If both vars are provided, prefer activation key.\n# 2. Activation-keys will be used when the key 'org' exists in the activation key secret.\n# 3. try to pre-register and mount files to the correct location so that users do no need to modify Dockerfiles.\n# 3. If the Dockerfile contains the string \"subcription-manager register\", add the activation-keys volume\n#    to buildah but don't pre-register for backwards compatibility. Mount an empty directory on\n#    shared emptydir volume to \"/etc/pki/entitlement\" to prevent certificates from being included\n\nif [ \"${HERMETIC}\" != \"true\" ] && [ -e /activation-key/org ]; then\n  cp -r --preserve=mode \"$ACTIVATION_KEY_PATH\" /tmp/activation-key\n  mkdir -p /shared/rhsm/etc/pki/entitlement\n  mkdir -p /shared/rhsm/etc/pki/consumer\n\n  VOLUME_MOUNTS+=(-v /tmp/activation-key:/activation-key\n    -v /shared/rhsm/etc/pki/entitlement:/etc/pki/entitlement:Z\n    -v /shared/rhsm/etc/pki/consumer:/etc/pki/consumer:Z)\n  echo \"Adding activation key to the build\"\n\n  if ! grep -E \"^[^#]*subscription-manager.[^#]*register\" \"$dockerfile_path\"; then\n    # user is not running registration in the Containerfile: pre-register.\n    echo \"Pre-registering with subscription manager.\"\n    subscription-manager register --org \"$(cat /tmp/activation-key/org)\" --activationkey \"$(cat /tmp/activation-key/activationkey)\"\n    trap 'subscription-manager unregister || true' EXIT\n\n    # copy generated certificates to /shared volume\n    cp /etc/pki/entitlement/*.pem /shared/rhsm/etc/pki/entitlement\n    cp /etc/pki/consumer/*.pem /shared/rhsm/etc/pki/consumer\n\n    # and then mount get /etc/rhsm/ca/redhat-uep.pem into /run/secrets/rhsm/ca\n    VOLUME_MOUNTS+=(--volume /etc/rhsm/ca/redhat-uep.pem:/etc/rhsm/ca/redhat-uep.pem:Z)\n  fi\n\nelif [ \"${HERMETIC}\" != \"true\" ] && find /entitlement -name \"*.pem\" >>null; then\n  cp -r --preserve=mode \"$ENTITLEMENT_PATH\" /tmp/entitlement\n  VOLUME_MOUNTS+=(--volume /tmp/entitlement:/etc/pki/entitlement)\n  echo \"Adding the entitlement to the build\"\nfi\n\nif [ -n \"${ADDITIONAL_VOLUME_MOUNTS-}\" ]; then\n  # ADDITIONAL_VOLUME_MOUNTS allows to specify more volumes for the build.\n  # Instrumented builds (SAST) use this step as their base and add some other tools.\n  while read -r volume_mount; do\n    VOLUME_MOUNTS+=(\"--volume=$volume_mount\")\n  done <<<\"$ADDITIONAL_VOLUME_MOUNTS\"\nfi\n\nADDITIONAL_SECRET_PATH=\"/additional-secret\"\nADDITIONAL_SECRET_TMP=\"/tmp/additional-secret\"\nif [ -d \"$ADDITIONAL_SECRET_PATH\" ]; then\n  cp -r --preserve=mode -L \"$ADDITIONAL_SECRET_PATH\" $ADDITIONAL_SECRET_TMP\n  while read -r filename; do\n    echo \"Adding the secret ${ADDITIONAL_SECRET}/${filename} to the build, available at /run/secrets/${ADDITIONAL_SECRET}/${filename}\"\n    BUILDAH_ARGS+=(\"--secret=id=${ADDITIONAL_SECRET}/${filename},src=$ADDITIONAL_SECRET_TMP/${filename}\")\n  done < <(find $ADDITIONAL_SECRET_TMP -maxdepth 1 -type f -exec basename {} \\;)\nfi\n\n# Prevent ShellCheck from giving a warning because 'image' is defined and 'IMAGE' is not.\ndeclare IMAGE\n\nbuildah_cmd_array=(\n  buildah build\n  \"${VOLUME_MOUNTS[@]}\"\n  \"${BUILDAH_ARGS[@]}\"\n  \"${LABELS[@]}\"\n  \"${ANNOTATIONS[@]}\"\n  --tls-verify=\"$TLSVERIFY\" --no-cache\n  --ulimit nofile=4096:4096\n  -f \"$dockerfile_copy\" -t \"$IMAGE\" .\n)\nbuildah_cmd=$(printf \"%q \" \"${buildah_cmd_array[@]}\")\n\nif [ \"${HERMETIC}\" == \"true\" ]; then\n  # enabling loopback adapter enables Bazel builds to work in hermetic mode.\n  command=\"ip link set lo up && $buildah_cmd\"\nelse\n  command=\"$buildah_cmd\"\nfi\n\n# disable host subcription manager integration\nfind /usr/share/rhel/secrets -type l -exec unlink {} \\;\n\nunshare -Uf \"${UNSHARE_ARGS[@]}\" --keep-caps -r --map-users 1,1,65536 --map-groups 1,1,65536 -w \"${SOURCE_CODE_DIR}/$CONTEXT\" -- sh -c \"$command\"\n\ncontainer=$(buildah from --pull-never \"$IMAGE\")\n\n# Save the SBOM produced by Cachi2 so it can be merged into the final SBOM later\nif [ -f \"/tmp/cachi2/output/bom.json\" ]; then\n  echo \"Making copy of sbom-cachi2.json\"\n  cp /tmp/cachi2/output/bom.json ./sbom-cachi2.json\nfi\n\nbuildah mount \"$container\" | tee /shared/container_path\n# delete symlinks - they may point outside the container rootfs, messing with SBOM scanners\nfind $(cat /shared/container_path) -xtype l -delete\necho $container >/shared/container_name\n\ntouch /shared/base_images_digests\necho \"Recording base image digests used\"\nfor image in $BASE_IMAGES; do\n  base_image_digest=$(buildah images --format '{{ .Name }}:{{ .Tag }}@{{ .Digest }}' --filter reference=\"$image\")\n  # In some cases, there might be BASE_IMAGES, but not any associated digest. This happens\n  # if buildah did not use that particular image during build because it was skipped\n  if [ -n \"$base_image_digest\" ]; then\n    echo \"$image $base_image_digest\" | tee -a /shared/base_images_digests\n  fi\ndone\n", "environment":{"container":"build", "image":"oci://quay.io/konflux-ci/buildah-task@sha256:3d8f5fe17878a5325bf276e89ecfc17ed6d22a18b49a6255ffdf498ce94d9802"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nset -euo pipefail\n/scripts/inject-icm.sh \"$IMAGE\"\n", "environment":{"container":"icm", "image":"oci://quay.io/konflux-ci/icm-injection-scripts@sha256:fbab9755f6324ddb8667aefb359e22e9e0119dab5434cf6fb5ddcaaf307d2cac"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nset -e\n\nca_bundle=/mnt/trusted-ca/ca-bundle.crt\nif [ -f \"$ca_bundle\" ]; then\n  echo \"INFO: Using mounted CA bundle: $ca_bundle\"\n  cp -vf $ca_bundle /etc/pki/ca-trust/source/anchors\n  update-ca-trust\nfi\n\n# While we can build images with the desired format, we will simplify any local\n# and remote build differences by just performing any necessary conversions at\n# push time.\npush_format=oci\nif [ \"${BUILDAH_FORMAT}\" == \"docker\" ]; then\n  push_format=docker\nfi\n\nretries=5\n# Push to a unique tag based on the TaskRun name to avoid race conditions\necho \"Pushing to ${IMAGE%:*}:${TASKRUN_NAME}\"\nif ! buildah push \\\n  --format=\"$push_format\" \\\n  --retry \"$retries\" \\\n  --tls-verify=\"$TLSVERIFY\" \\\n  \"$IMAGE\" \\\n  \"docker://${IMAGE%:*}:integration-service-on-push-nw92j-build-sealights-container\"; then\n  echo \"Failed to push sbom image to ${IMAGE%:*}:integration-service-on-push-nw92j-build-sealights-container after ${retries} tries\"\n  exit 1\nfi\n\n# Push to a tag based on the git revision\necho \"Pushing to ${IMAGE}\"\nif ! buildah push \\\n  --format=\"$push_format\" \\\n  --retry \"$retries\" \\\n  --tls-verify=\"$TLSVERIFY\" \\\n  --digestfile \"/var/workdir/image-digest\" \"$IMAGE\" \\\n  \"docker://$IMAGE\"; then\n  echo \"Failed to push sbom image to $IMAGE after ${retries} tries\"\n  exit 1\nfi\n\ncat \"/var/workdir\"/image-digest | tee /tekton/results/IMAGE_DIGEST\necho -n \"$IMAGE\" | tee /tekton/results/IMAGE_URL\n{\n  echo -n \"${IMAGE}@\"\n  cat \"/var/workdir/image-digest\"\n} >\"/tekton/results/IMAGE_REF\"\n", "environment":{"container":"push", "image":"oci://quay.io/konflux-ci/buildah-task@sha256:3d8f5fe17878a5325bf276e89ecfc17ed6d22a18b49a6255ffdf498ce94d9802"}}, {"annotations":null, "arguments":null, "entryPoint":"if [ \"${SKIP_SBOM_GENERATION}\" = \"true\" ]; then\n  echo \"Skipping SBOM generation\"\n  exit 0\nfi\n\ncase $SBOM_TYPE in\ncyclonedx)\n  syft_sbom_type=cyclonedx-json@1.5\n  ;;\nspdx)\n  syft_sbom_type=spdx-json@2.3\n  ;;\n*)\n  echo \"Invalid SBOM type: $SBOM_TYPE. Valid: cyclonedx, spdx\" >&2\n  exit 1\n  ;;\nesac\n\necho \"Running syft on the source directory\"\nsyft dir:\"/var/workdir/$SOURCE_CODE_DIR/$CONTEXT\" --output \"$syft_sbom_type\"=\"/var/workdir/sbom-source.json\"\necho \"Running syft on the image filesystem\"\nsyft dir:\"$(cat /shared/container_path)\" --output \"$syft_sbom_type\"=\"/var/workdir/sbom-image.json\"\n", "environment":{"container":"sbom-syft-generate", "image":"oci://registry.access.redhat.com/rh-syft-tech-preview/syft-rhel9@sha256:070ecb89de5104bb64fbf399a991a975e7d4d7e0cea0f7beb1e591b5591991c8"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nset -euo pipefail\n\nif [ \"${SKIP_SBOM_GENERATION}\" = \"true\" ]; then\n  echo \"Skipping SBOM generation\"\n  exit 0\nfi\n\nsboms_to_merge=(syft:sbom-source.json syft:sbom-image.json)\n\nif [ -f \"sbom-cachi2.json\" ]; then\n  sboms_to_merge+=(cachi2:sbom-cachi2.json)\nfi\n\necho \"Merging sboms: (${sboms_to_merge[*]}) => sbom.json\"\npython3 /scripts/merge_sboms.py \"${sboms_to_merge[@]}\" >sbom.json\n\necho \"Adding image reference to sbom\"\nIMAGE_URL=\"$(cat \"/tekton/results/IMAGE_URL\")\"\nIMAGE_DIGEST=\"$(cat \"/tekton/results/IMAGE_DIGEST\")\"\n\npython3 /scripts/add_image_reference.py \\\n  --image-url \"$IMAGE_URL\" \\\n  --image-digest \"$IMAGE_DIGEST\" \\\n  --input-file sbom.json \\\n  --output-file /tmp/sbom.tmp.json\n\nmv /tmp/sbom.tmp.json sbom.json\n\necho \"Adding base images data to sbom.json\"\npython3 /scripts/base_images_sbom_script.py \\\n  --sbom=sbom.json \\\n  --parsed-dockerfile=/shared/parsed_dockerfile.json \\\n  --base-images-digests=/shared/base_images_digests\n", "environment":{"container":"prepare-sboms", "image":"oci://quay.io/konflux-ci/sbom-utility-scripts@sha256:0b7da5a5131a9663a06dd2c8dea4f6eb69912ec2c7ba66a24995d39fcdd9bc08"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nif [ \"${SKIP_SBOM_GENERATION}\" = \"true\" ]; then\n  echo \"Skipping SBOM generation\"\n  exit 0\nfi\n\nca_bundle=/mnt/trusted-ca/ca-bundle.crt\nif [ -f \"$ca_bundle\" ]; then\n  echo \"INFO: Using mounted CA bundle: $ca_bundle\"\n  cp -vf $ca_bundle /etc/pki/ca-trust/source/anchors\n  update-ca-trust\nfi\n\ncosign attach sbom --sbom sbom.json --type \"$SBOM_TYPE\" \"$(cat \"/tekton/results/IMAGE_REF\")\"\n\n# Remove tag from IMAGE while allowing registry to contain a port number.\nsbom_repo=\"${IMAGE%:*}\"\nsbom_digest=\"$(sha256sum sbom.json | cut -d' ' -f1)\"\n# The SBOM_BLOB_URL is created by `cosign attach sbom`.\necho -n \"${sbom_repo}@sha256:${sbom_digest}\" | tee \"/tekton/results/SBOM_BLOB_URL\"\n", "environment":{"container":"upload-sbom", "image":"oci://quay.io/konflux-ci/appstudio-utils@sha256:91ddd999271f65d8ec8487b10f3dd378f81aa894e11b9af4d10639fd52bba7e8"}}]}, {"after":["build-container", "clone-repository", "init"], "finishedOn":"2025-03-25T13:38:06Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"image-build, konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-0bf02a305282e42c-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "build.appstudio.redhat.com/build_type":"docker", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"build-image-index", "tekton.dev/task":"build-image-index"}}, "parameters":{"ALWAYS_BUILD_INDEX":"false", "BUILDAH_FORMAT":"oci", "COMMIT_SHA":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "IMAGE":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "IMAGES":["quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17@sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9"], "IMAGE_EXPIRES_AFTER":"", "STORAGE_DRIVER":"vfs", "TLSVERIFY":"true"}}, "name":"build-image-index", "ref":{"params":[{"name":"name", "value":"build-image-index"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-build-image-index:0.1@sha256:d34e4245b767c5b1b5edbbad9fc9cf8050cf19a69c8e55856479848405c596ec"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"IMAGES", "type":"string", "value":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9"}, {"name":"IMAGE_DIGEST", "type":"string", "value":"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9"}, {"name":"IMAGE_URL", "type":"string", "value":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:37:59Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":["quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17@sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9"], "entryPoint":"#!/bin/bash\n# Fixing group permission on /var/lib/containers\nset -eu\nset -o pipefail\nchown root:root /var/lib/containers\n\nsed -i 's/^\\s*short-name-mode\\s*=\\s*.*/short-name-mode = \"disabled\"/' /etc/containers/registries.conf\n\nif [[ $# -ne 1 && \"$ALWAYS_BUILD_INDEX\" != \"true\" ]]; then\n  echo \"Skipping image index generation while supplying multiple image inputs is unsupported.\"\n  exit 2\nfi\n\nbuildah manifest create \"$IMAGE\"\nfor i in $@\ndo\n  TOADD=\"$i\"\n  TOADD_URL=\"$(echo \"$i\" | cut -d@ -f1)\"\n  TOADD_DIGEST=\"$(echo \"$i\" | cut -d@ -f2)\"\n  if [[ $(echo \"$i\" | tr -cd \":\" | wc -c) == 2 ]]; then\n    #format is repository:tag@sha256:digest\n    #we need to remove the tag, and just reference the digest\n    #as tag + digest is not supported\n    TOADD_REPOSITORY=\"$(echo \"$i\" | cut -d: -f1)\"\n    TOADD=\"${TOADD_REPOSITORY}@${TOADD_DIGEST}\"\n  fi\n  if [[ \"$ALWAYS_BUILD_INDEX\" != \"true\" ]]; then\n    echo \"Skipping image index generation. Returning results for $TOADD.\"\n    echo -n \"${TOADD_URL}\" > \"/tekton/results/IMAGE_URL\"\n    echo -n \"${TOADD_DIGEST}\" > \"/tekton/results/IMAGE_DIGEST\"\n    echo -n \"${TOADD}\" > \"/tekton/results/IMAGES\"\n    exit 0\n  fi\n  echo \"Adding $TOADD\"\n  buildah manifest add $IMAGE \"docker://$TOADD\" --all\ndone\n\n# While the BUILDAH_FORMAT environment variable can define the push\n# format, lets be explicit about the format that we want when we push.\npush_format=oci\nif [ \"${BUILDAH_FORMAT}\" == \"docker\" ]; then\n  push_format=docker\nfi\n\nstatus=-1\nmax_run=5\nsleep_sec=10\nfor run in $(seq 1 $max_run); do\n  status=0\n  [ \"$run\" -gt 1 ] && sleep $sleep_sec\n  echo \"Pushing image to registry\"\n  buildah manifest push \\\n    --format=\"$push_format\" \\\n    --tls-verify=$TLSVERIFY \\\n    --digestfile image-digest $IMAGE \\\n    docker://$IMAGE && break || status=$?\ndone\nif [ \"$status\" -ne 0 ]; then\n    echo \"Failed to push image to registry after ${max_run} tries\"\n    exit 1\nfi\n\nINDEX_REPOSITORY=\"$(echo \"$IMAGE\" | cut -d@ -f1 | cut -d: -f1)\"\nMANIFEST_DIGESTS=$(buildah manifest inspect \"$IMAGE\" | jq -er \".manifests[].digest\")\nimage_manifests=\"\"\nfor i in $MANIFEST_DIGESTS\ndo\n  image_manifests=\"${image_manifests} ${INDEX_REPOSITORY}@${i},\"\ndone\n\ncat image-digest | tee /tekton/results/IMAGE_DIGEST\necho -n \"$IMAGE\" | tee \"/tekton/results/IMAGE_URL\"\n{\n  echo -n \"${IMAGE}@\"\n  cat \"image-digest\"\n} > \"/tekton/results/IMAGE_REF\"\necho -n \"${image_manifests:1:-1}\" > \"/tekton/results/IMAGES\"\n\n# buildah manifest inspect will always give precedence to the local image.\n# Since we built this image in the same place as we are inspecting it, we can\n# just inspect it instead of finding the digest and inspecting the remote image.\nbuildah manifest inspect \"$IMAGE\" > /index-build-data/manifest_data.json\n", "environment":{"container":"build", "image":"oci://quay.io/konflux-ci/buildah-task@sha256:3d8f5fe17878a5325bf276e89ecfc17ed6d22a18b49a6255ffdf498ce94d9802"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nset -e\n\nMANIFEST_DATA_FILE=\"/index-build-data/manifest_data.json\"\nif [ ! -f \"$MANIFEST_DATA_FILE\" ]; then\n  echo \"The manifest_data.json file does not exist. Skipping the SBOM creation...\"\n  exit 0\nfi\n\nIMAGE_URL=\"$(cat \"/tekton/results/IMAGE_URL\")\"\nIMAGE_DIGEST=\"$(cat \"/tekton/results/IMAGE_DIGEST\")\"\necho \"Creating SBOM result file...\"\npython3 index_image_sbom_script.py \\\n  --image-index-url \"$IMAGE_URL\" \\\n  --image-index-digest \"$IMAGE_DIGEST\" \\\n  --inspect-input-file \"$MANIFEST_DATA_FILE\" \\\n  --output-path /index-build-data/sbom-results.json\n", "environment":{"container":"create-sbom", "image":"oci://quay.io/konflux-ci/sbom-utility-scripts@sha256:0b7da5a5131a9663a06dd2c8dea4f6eb69912ec2c7ba66a24995d39fcdd9bc08"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nset -e\n\nSBOM_RESULT_FILE=\"/index-build-data/sbom-results.json\"\nif [ ! -f \"$SBOM_RESULT_FILE\" ]; then\n  echo \"The sbom_results.json file does not exists. Skipping the SBOM upload...\"\n  exit 0\nfi\n\ncosign attach sbom --sbom \"$SBOM_RESULT_FILE\" --type spdx \"$(cat \"/tekton/results/IMAGE_REF\")\"\n\n# Remove tag from IMAGE while allowing registry to contain a port number.\nsbom_repo=\"${IMAGE%:*}\"\nsbom_digest=\"$(sha256sum \"$SBOM_RESULT_FILE\" | cut -d' ' -f1)\"\n# The SBOM_BLOB_URL is created by `cosign attach sbom`.\necho -n \"${sbom_repo}@sha256:${sbom_digest}\" | tee \"/tekton/results/SBOM_BLOB_URL\"\n", "environment":{"container":"upload-sbom", "image":"oci://quay.io/konflux-ci/appstudio-utils@sha256:91ddd999271f65d8ec8487b10f3dd378f81aa894e11b9af4d10639fd52bba7e8"}}]}, {"after":["build-image-index", "prefetch-dependencies", "init"], "finishedOn":"2025-03-25T13:39:08Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-e304d11f7fae67ff-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"build-source-image", "tekton.dev/task":"source-build-oci-ta"}}, "parameters":{"BASE_IMAGES":"", "BINARY_IMAGE":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "CACHI2_ARTIFACT":"", "SOURCE_ARTIFACT":"oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf"}}, "name":"build-source-image", "ref":{"params":[{"name":"name", "value":"source-build-oci-ta"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-source-build-oci-ta:0.2@sha256:ea2316bcef60fdbc6d89bb34d343d9157e89e786504fb68e223c04a7486d9e91"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"BUILD_RESULT", "type":"string", "value":"{\"status\": \"success\", \"dependencies_included\": false, \"base_image_source_included\": true, \"image_url\": \"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:sha256-33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9.src\", \"image_digest\": \"sha256:6370cd478067eab7b4286e128545363671f2c48176107459cbd3e9c30dbec156\"}"}, {"name":"IMAGE_REF", "type":"string", "value":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:sha256-33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9.src@sha256:6370cd478067eab7b4286e128545363671f2c48176107459cbd3e9c30dbec156"}, {"name":"SOURCE_IMAGE_DIGEST", "type":"string", "value":"sha256:6370cd478067eab7b4286e128545363671f2c48176107459cbd3e9c30dbec156"}, {"name":"SOURCE_IMAGE_URL", "type":"string", "value":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:sha256-33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9.src"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:38:06Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":["use", "oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf=/var/workdir/source", "=/var/workdir/cachi2"], "entryPoint":"", "environment":{"container":"use-trusted-artifact", "image":"oci://quay.io/konflux-ci/build-trusted-artifacts@sha256:23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\nset -euo pipefail\n\nif [[ -n \"$BASE_IMAGES\" ]]; then\n  echo \"BASE_IMAGES param received:\"\n  printf \"%s\" \"$BASE_IMAGES\" | tee \"$BASE_IMAGES_FILE\"\n  exit\nfi\n\necho \"BASE_IMAGES param is empty, inspecting the SBOM instead\"\n\nraw_inspect=$(skopeo inspect --raw \"docker://$BINARY_IMAGE\")\nif manifest_digest=$(jq -e -r '.manifests[0].digest' <<<\"$raw_inspect\"); then\n  # The BINARY_IMAGE is an image index, each manifest in the list has its own SBOM.\n  # We're gonna assume the base images are the same or similar enough in all the SBOMs.\n  echo \"BINARY_IMAGE ($BINARY_IMAGE) is a manifest list, picking an arbitrary image from the list\"\n  image_without_digest=${BINARY_IMAGE%@*}\n  image_without_tag=${image_without_digest%:*}\n  image=${image_without_tag}@${manifest_digest}\nelse\n  # The image is a single manifest\n  image=$BINARY_IMAGE\nfi\n\nfor i in {1..5}; do\n  echo \"Downloading SBOM for $image (attempt $i)\"\n  sbom=$(cosign download sbom \"$image\") && break\n  [[ \"$i\" -lt 5 ]] && sleep 1\ndone\n\nif [[ -z \"$sbom\" ]]; then\n  echo \"Failed to download SBOM after 5 attempts. Proceeding anyway.\"\n  echo \"WARNING: the source image will not include sources for the base image.\"\n  exit 0\nfi\n\necho -n \"Looking for base image in SBOM\"\n\n# Note: the SBOM should contain at most one image with the is_base_image property - the\n# base image for the last FROM instruction. That is the only base image we care about.\nif jq -e '.bomFormat == \"CycloneDX\"' <<<\"$sbom\" >/dev/null; then\n  echo \" (.formulation[].components[] with 'konflux:container:is_base_image' property)\"\n  jq -r '\n        .formulation[]?\n        | .components[]?\n        | select(any(.properties[]?; .name == \"konflux:container:is_base_image\"))\n        | (.purl | capture(\"^pkg:oci/.*?@(?<digest>.*?:[a-f0-9]*)\")) as $matched\n        | .name + \"@\" + $matched.digest\n    ' <<<\"$sbom\" | tee \"$BASE_IMAGES_FILE\"\nelse\n  echo ' (a package with a {\"name\": \"konflux:container:is_base_image\"} JSON-encoded annotation)'\n  jq -r '\n        .packages[]\n        | select(any(.annotations[]?.comment; (fromjson?).name? == \"konflux:container:is_base_image\"))\n        | [.externalRefs[]? | select(.referenceType == \"purl\").referenceLocator] as $purls\n        | ($purls | first | capture(\"^pkg:oci/.*?@(?<digest>.*?:[a-f0-9]*)\")) as $matched\n        | .name + \"@\" + $matched.digest\n    ' <<<\"$sbom\" | tee \"$BASE_IMAGES_FILE\"\nfi\n", "environment":{"container":"get-base-images", "image":"oci://quay.io/konflux-ci/appstudio-utils@sha256:91ddd999271f65d8ec8487b10f3dd378f81aa894e11b9af4d10639fd52bba7e8"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\nset -euo pipefail\n\napp_dir=/opt/source_build\nregistry_allowlist=\"\nregistry.access.redhat.com\nregistry.redhat.io\n\"\n\n## This is needed for the builds performed by the rpm-ostree task\n## otherwise, we can see this error:\n## \"fatal: detected dubious ownership in repository at '/var/workdir/source'\"\n##\ngit config --global --add safe.directory $SOURCE_DIR\n\nbase_images=$(if [[ -f \"$BASE_IMAGES_FILE\" ]]; then cat \"$BASE_IMAGES_FILE\"; fi)\n\n${app_dir}/appenv/bin/python3 ${app_dir}/source_build.py \\\n  --output-binary-image \"$BINARY_IMAGE\" \\\n  --workspace /var/workdir \\\n  --source-dir \"$SOURCE_DIR\" \\\n  --base-images \"$base_images\" \\\n  --write-result-to \"$RESULT_FILE\" \\\n  --cachi2-artifacts-dir \"$CACHI2_ARTIFACTS_DIR\" \\\n  --registry-allowlist=\"$registry_allowlist\"\n\ncat \"$RESULT_FILE\" | jq -j \".image_url\" >\"$RESULT_SOURCE_IMAGE_URL\"\ncat \"$RESULT_FILE\" | jq -j \".image_digest\" >\"$RESULT_SOURCE_IMAGE_DIGEST\"\njq -j '\"\\(.image_url)@\\(.image_digest)\"' \"${RESULT_FILE}\" >\"/tekton/results/IMAGE_REF\"\n\ncp \"$RESULT_FILE\" \"$WS_BUILD_RESULT_FILE\"\n", "environment":{"container":"build", "image":"oci://quay.io/konflux-ci/source-container-build@sha256:7536131acdc9c25254d77342bcb77bbea969374928ad93832912e6fe4b135c3b"}}]}, {"after":["build-container"], "finishedOn":"2025-03-25T13:38:08Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-081588df13b34421-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"deprecated-base-image-check", "tekton.dev/task":"deprecated-image-check"}}, "parameters":{"BASE_IMAGES_DIGESTS":"", "CA_TRUST_CONFIG_MAP_KEY":"ca-bundle.crt", "CA_TRUST_CONFIG_MAP_NAME":"trusted-ca", "IMAGE_DIGEST":"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9", "IMAGE_URL":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "POLICY_DIR":"/project/repository/", "POLICY_NAMESPACE":"required_checks"}}, "name":"deprecated-base-image-check", "ref":{"params":[{"name":"name", "value":"deprecated-image-check"}, {"name":"bundle", "value":"quay.io/redhat-appstudio-tekton-catalog/task-deprecated-image-check:0.5@sha256:47f0cc74cbb70a96af18bce46c31e9599bf16b67771673078b5cc21845179a7f"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"IMAGES_PROCESSED", "type":"string", "value":"{\"image\": {\"pullspec\": \"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\", \"digests\": [\"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9\"]}}\n"}, {"name":"TEST_OUTPUT", "type":"string", "value":"{\"result\":\"SUCCESS\",\"timestamp\":\"2025-03-25T13:38:07+00:00\",\"note\":\"Task deprecated-image-check completed: Check result for task result.\",\"namespace\":\"required_checks\",\"successes\":2,\"failures\":0,\"warnings\":0}\n"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:37:59Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\nset -euo pipefail\nsource /utils.sh\ntrap 'handle_error /tekton/results/TEST_OUTPUT' EXIT\n\nIMAGES_TO_BE_PROCESSED_PATH=\"/tmp/images_to_be_processed.txt\"\ntouch /tmp/images_to_be_processed.txt\n\nsuccess_counter=0\nfailure_counter=0\nerror_counter=0\nwarnings_counter=0\n\nimages_processed_template='{\"image\": {\"pullspec\": \"'\"$IMAGE_URL\"'\", \"digests\": [%s]}}'\ndigests_processed=()\n\nimagewithouttag=$(echo -n $IMAGE_URL | sed \"s/\\(.*\\):.*/\\1/\")\n# strip new-line escape symbol from parameter and save it to variable\nimageanddigest=$(echo -n $imagewithouttag@$IMAGE_DIGEST)\n\n# Get the arch and image manifests by inspecting the image. This is mainly for identifying image indexes\nimage_manifests=$(get_image_manifests -i ${imageanddigest})\nif [ -n \"$image_manifests\" ]; then\n  while read -r arch arch_sha; do\n    SBOM_FILE_PATH=$(echo \"/tmp/sbom-$arch.json\")\n    arch_imageanddigest=$(echo $imagewithouttag@$arch_sha)\n\n    # Get base images from SBOM\n    cosign download sbom $arch_imageanddigest > ${SBOM_FILE_PATH}\n    if [ $? -ne 0 ]; then\n      echo \"Unable to download sbom for arch $arch.\"\n      continue\n    fi\n\n    < \"${SBOM_FILE_PATH}\" jq -r '\n        if .bomFormat == \"CycloneDX\" then\n            .formulation[]?\n            | .components[]?\n            | select(any(.properties[]?; .name | test(\"^konflux:container:is_(base|builder)_image\")))\n            | .name\n        else\n            .packages[]\n            | select(any(.annotations[]?.comment; (fromjson?).name? | test(\"^konflux:container:is_(base|builder)_image\")?))\n            | .name\n        end\n    ' >> \"${IMAGES_TO_BE_PROCESSED_PATH}\"\n    echo \"Detected base images from $arch SBOM:\"\n    cat \"${IMAGES_TO_BE_PROCESSED_PATH}\"\n    echo \"\"\n\n    digests_processed+=(\"\\\"$arch_sha\\\"\")\n  done < <(echo \"$image_manifests\" | jq -r 'to_entries[] | \"\\(.key) \\(.value)\"')\nfi\n\n# If the image is an Image Index, also add the Image Index digest to the list.\nif [[ \"${digests_processed[*]}\" != *\"$IMAGE_DIGEST\"* ]]; then\n  digests_processed+=(\"\\\"$IMAGE_DIGEST\\\"\")\nfi\n\ndigests_processed_string=$(IFS=,; echo \"${digests_processed[*]}\")\n\nif [ -n \"${BASE_IMAGES_DIGESTS}\" ];\nthen\n  echo \"Base images passed by param BASE_IMAGES_DIGESTS: $BASE_IMAGES_DIGESTS\"\n  # Get images from the parameter\n  for IMAGE_WITH_TAG in $(echo -n \"$BASE_IMAGES_DIGESTS\" | sed 's/\\\\n/\\'$'\\n''/g' );\n  do\n    echo $IMAGE_WITH_TAG | cut -d \":\" -f1 >> ${IMAGES_TO_BE_PROCESSED_PATH}\n  done\nfi\n\n# we want to remove duplicated entries\nBASE_IMAGES=$(sort -u \"${IMAGES_TO_BE_PROCESSED_PATH}\")\n\necho \"Images to be checked:\"\necho \"$BASE_IMAGES\"\necho \"\"\n\nfor BASE_IMAGE in ${BASE_IMAGES};\ndo\n  IFS=:'/' read -r IMAGE_REGISTRY IMAGE_REPOSITORY<<< $BASE_IMAGE\n\n  # Red Hat Catalog hack: registry.redhat.io must be queried as registry.access.redhat.com in Red Hat catalog\n  IMAGE_REGISTRY_CATALOG=$(echo \"${IMAGE_REGISTRY}\" | sed 's/^registry.redhat.io$/registry.access.redhat.com/')\n\n  export IMAGE_REPO_PATH=/tmp/${IMAGE_REPOSITORY}\n  mkdir -p ${IMAGE_REPO_PATH}\n  echo \"Querying Red Hat Catalog for $BASE_IMAGE.\"\n  http_code=$(curl -s -o ${IMAGE_REPO_PATH}/repository_data.json -w '%{http_code}' \"https://catalog.redhat.com/api/containers/v1/repositories/registry/${IMAGE_REGISTRY_CATALOG}/repository/${IMAGE_REPOSITORY}\")\n\n  if [ \"$http_code\" == \"200\" ];\n  then\n    echo \"Running conftest using $POLICY_DIR policy, $POLICY_NAMESPACE namespace.\"\n    /usr/bin/conftest test --no-fail ${IMAGE_REPO_PATH}/repository_data.json \\\n    --policy $POLICY_DIR --namespace $POLICY_NAMESPACE \\\n    --output=json | tee ${IMAGE_REPO_PATH}/deprecated_image_check_output.json\n\n    failures_num=$(jq -r '.[].failures|length' ${IMAGE_REPO_PATH}/deprecated_image_check_output.json)\n    if [[ \"${failures_num}\" -gt 0 ]]; then\n      echo \"[FAILURE] Image ${IMAGE_REGISTRY}/${IMAGE_REPOSITORY} has been deprecated\"\n    fi\n    failure_counter=$((failure_counter+failures_num))\n\n    successes_num=$(jq -r '.[].successes' ${IMAGE_REPO_PATH}/deprecated_image_check_output.json)\n    if [[ \"${successes_num}\" -gt 0 ]]; then\n      echo \"[SUCCESS] Image ${IMAGE_REGISTRY}/${IMAGE_REPOSITORY} is valid\"\n    fi\n    success_counter=$((success_counter+successes_num))\n\n  elif [ \"$http_code\" == \"404\" ];\n  then\n    echo \"[WARNING] Registry/image ${IMAGE_REGISTRY}/${IMAGE_REPOSITORY} not found in Red Hat Catalog. Task cannot provide results if image is deprecated.\"\n    warnings_counter=$((warnings_counter+1))\n  else\n    echo \"[ERROR] Unexpected error (HTTP code: ${http_code}) occurred for registry/image ${IMAGE_REGISTRY}/${IMAGE_REPOSITORY}.\"\n    error_counter=$((error_counter+1))\n  fi\ndone\n\nnote=\"Task deprecated-image-check failed: Command conftest failed. For details, check Tekton task log.\"\nERROR_OUTPUT=$(make_result_json -r ERROR -n \"$POLICY_NAMESPACE\" -t \"$note\")\n\nnote=\"Task deprecated-image-check completed: Check result for task result.\"\nif [[ \"$error_counter\" == 0 ]];\nthen\n  if [[ \"${failure_counter}\" -gt 0 ]]; then\n    RES=\"FAILURE\"\n  elif [[ \"${warnings_counter}\" -gt 0 ]]; then\n    RES=\"WARNING\"\n  elif [[ \"${success_counter}\" -eq 0 ]]; then\n    # when all counters are 0, there are no base images to check\n    note=\"Task deprecated-image-check success: No base images to check.\"\n    RES=\"SUCCESS\"\n  else\n    RES=\"SUCCESS\"\n  fi\n  TEST_OUTPUT=$(make_result_json \\\n    -r \"${RES}\" -n \"$POLICY_NAMESPACE\" \\\n    -s \"${success_counter}\" -f \"${failure_counter}\" -w \"${warnings_counter}\" -t \"$note\")\nfi\necho \"${TEST_OUTPUT:-${ERROR_OUTPUT}}\" | tee /tekton/results/TEST_OUTPUT\n\necho \"${images_processed_template/\\[%s]/[$digests_processed_string]}\" | tee /tekton/results/IMAGES_PROCESSED\n", "environment":{"container":"check-images", "image":"oci://quay.io/konflux-ci/konflux-test@sha256:b046b1456077a2c15c51b1e0b83fde99a0a39bdf35872cde7437a857ef9d4ba7"}}]}, {"after":["build-container"], "finishedOn":"2025-03-25T13:38:36Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-e5561253e3b5dcb6-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"clair-scan", "tekton.dev/task":"clair-scan"}}, "parameters":{"ca-trust-config-map-key":"ca-bundle.crt", "ca-trust-config-map-name":"trusted-ca", "docker-auth":"", "image-digest":"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9", "image-url":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17"}}, "name":"clair-scan", "ref":{"params":[{"name":"name", "value":"clair-scan"}, {"name":"bundle", "value":"quay.io/redhat-appstudio-tekton-catalog/task-clair-scan:0.2@sha256:e9c29ce65c9cf9ce796f14c1464bd95402b335292333f054ad4f8d951d63f630"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"IMAGES_PROCESSED", "type":"string", "value":"{\"image\": {\"pullspec\": \"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\", \"digests\": [\"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9\"]}}\n"}, {"name":"REPORTS", "type":"string", "value":"{\"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9\":\"sha256:9ad9dc22737d7e4cd86cc7ec321131d6cca5bb279138c7d4e135dff8dc32ce35\"}\n"}, {"name":"SCAN_OUTPUT", "type":"string", "value":"{\"vulnerabilities\":{\"critical\":0,\"high\":0,\"medium\":0,\"low\":0,\"unknown\":0},\"unpatched_vulnerabilities\":{\"critical\":0,\"high\":0,\"medium\":13,\"low\":32,\"unknown\":0}}\n"}, {"name":"TEST_OUTPUT", "type":"string", "value":"{\"result\":\"SUCCESS\",\"timestamp\":\"2025-03-25T13:38:36+00:00\",\"note\":\"Task clair-scan completed: Refer to Tekton task result SCAN_OUTPUT for vulnerabilities scanned by Clair.\",\"namespace\":\"default\",\"successes\":0,\"failures\":0,\"warnings\":0}\n"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:37:59Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\nset -euo pipefail\n. /utils.sh\n\nimagewithouttag=$(echo -n $IMAGE_URL | sed \"s/\\(.*\\):.*/\\1/\")\n# strip new-line escape symbol from parameter and save it to variable\nimageanddigest=$(echo $imagewithouttag@$IMAGE_DIGEST)\necho \"Inspecting raw image manifest $imageanddigest.\"\n\n# Get the arch and image manifests by inspecting the image. This is mainly for identifying image indexes\nimage_manifests=$(get_image_manifests -i ${imageanddigest})\nif [ -n \"$image_manifests\" ]; then\n  echo \"$image_manifests\" | jq -r 'to_entries[] | \"\\(.key) \\(.value)\"' | while read -r arch arch_sha; do\n    echo \"$arch_sha\" > /tekton/home/image-manifest-$arch.sha\n  done\nfi\n", "environment":{"container":"get-image-manifests", "image":"oci://quay.io/konflux-ci/konflux-test@sha256:b046b1456077a2c15c51b1e0b83fde99a0a39bdf35872cde7437a857ef9d4ba7"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n\nimagewithouttag=$(echo -n $IMAGE_URL | sed \"s/\\(.*\\):.*/\\1/\")\nimages_processed_template='{\"image\": {\"pullspec\": \"'\"$IMAGE_URL\"'\", \"digests\": [%s]}}'\ndigests_processed=()\n\n# the quay report format used by the Conftest rules in the\n# conftest-vulnerabilities step doesn't contain the \"issued\" date which\n# we require in the policy rules, so we resort to running clair-action\n# twice to produce both quay and clair formatted output\nclair_report() {\n  { clair-action report --image-ref=\"$1\" --db-path=/tmp/matcher.db --format=quay | tee \"clair-result-$2.json\"; } && \\\n  { clair-action report --image-ref=\"$1\" --db-path=/tmp/matcher.db --format=clair > \"clair-report-$2.json\"; }\n}\n\nfor sha_file in image-manifest-*.sha; do\n  if [ -e \"$sha_file\" ]; then\n    arch_sha=$(cat \"$sha_file\")\n    arch=$(basename \"$sha_file\" | sed 's/image-manifest-//;s/.sha//')\n    arch_specific_digest=\"$imagewithouttag@$arch_sha\"\n\n    echo \"Running clair-action on $arch image manifest.\"\n    # run the scan for each image manifest in the image index\n    clair_report \"${arch_specific_digest}\" \"${arch}\" || true\n\n    digests_processed+=(\"\\\"$arch_sha\\\"\")\n  fi\ndone\n\n# If the image is an Image Index, also add the Image Index digest to the list.\nif [[ \"${digests_processed[*]}\" != *\"$IMAGE_DIGEST\"* ]]; then\n  digests_processed+=(\"\\\"$IMAGE_DIGEST\\\"\")\nfi\ndigests_processed_string=$(IFS=,; echo \"${digests_processed[*]}\")\n\nimages_processed=$(echo \"${images_processed_template/\\[%s]/[$digests_processed_string]}\")\necho \"$images_processed\" > images-processed.json\n", "environment":{"container":"get-vulnerabilities", "image":"oci://quay.io/konflux-ci/clair-in-ci@sha256:d88d48d9e3210e70cfeb217de4ae935e283d66d37da0c2b4fe8fa08b6292047c"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n\nif ! compgen -G \"clair-report-*.json\" > /dev/null; then\n  echo 'No Clair reports generated. Skipping upload.'\n  exit 0\nfi\n\necho \"Selecting auth\"\nselect-oci-auth \"$IMAGE_URL\" > \"$HOME/auth.json\"\n\nrepository=\"${IMAGE_URL/:*/}\"\n\narch() {\n  report_file=\"$1\"\n  arch=\"${report_file/*-}\"\n  echo \"${arch/.json/}\"\n}\n\nMEDIA_TYPE='application/vnd.redhat.clair-report+json'\n\nreports_json=\"\"\nfor f in clair-report-*.json; do\n  digest=$(cat \"image-manifest-$(arch \"$f\").sha\")\n  image_ref=\"${repository}@${digest}\"\n  echo \"Attaching $f to ${image_ref}\"\n  report_digest=\"$(oras attach --no-tty --format go-template='{{.digest}}' --registry-config \"$HOME/auth.json\" --artifact-type \"${MEDIA_TYPE}\" \"${image_ref}\" \"$f:${MEDIA_TYPE}\")\"\n  # shellcheck disable=SC2016\n  reports_json=\"$(yq --output-format json --indent=0 eval-all '. as $i ireduce ({}; . * $i)' <(echo \"${reports_json}\") <(echo \"${digest}: ${report_digest}\"))\"\ndone\necho \"${reports_json}\" > reports.json\n", "environment":{"container":"oci-attach-report", "image":"oci://quay.io/konflux-ci/oras@sha256:76f2f7682d32902fec34753c11f414756d0e88070d07658a35e71760ef928b71"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\nset -euo pipefail\n. /utils.sh\ntrap 'handle_error /tekton/results/TEST_OUTPUT' EXIT\n\nclair_result_files=$(ls /tekton/home/clair-result-*.json)\nif [ -z \"$clair_result_files\" ]; then\n  echo \"Previous step [get-vulnerabilities] failed: No clair-result files found in /tekton/home.\"\nfi\n\nmissing_vulnerabilities_files=\"\"\nfor file in $clair_result_files; do\n  file_suffix=$(basename \"$file\" | sed 's/clair-result-//;s/.json//')\n  if [ ! -s \"$file\" ]; then\n    echo \"Previous step [get-vulnerabilities] failed: $file is empty.\"\n  else\n    /usr/bin/conftest test --no-fail $file \\\n    --policy /project/clair/vulnerabilities-check.rego --namespace required_checks \\\n    --output=json | tee /tekton/home/clair-vulnerabilities-$file_suffix.json || true\n  fi\n\n  #check for missing \"clair-vulnerabilities-<arch>/image-index\" file and create a string\n  if [ ! -f \"/tekton/home/clair-vulnerabilities-$file_suffix.json\" ]; then\n    missing_vulnerabilities_files+=\"${missing_vulnerabilities_files:+, }/tekton/home/clair-vulnerabilities-$file_suffix.json\"\n  fi\ndone\n\nif [ -n \"$missing_vulnerabilities_files\" ]; then\n  note=\"Task clair-scan failed: $missing_vulnerabilities_files did not generate. For details, check Tekton task log.\"\n  TEST_OUTPUT=$(make_result_json -r \"ERROR\" -t \"$note\")\n  echo \"$missing_vulnerabilities_files did not generate correctly. For details, check conftest command in Tekton task log.\"\n  echo \"${TEST_OUTPUT}\" | tee /tekton/results/TEST_OUTPUT\n  exit 0\nfi\n\nscan_result='{\"vulnerabilities\":{\"critical\":0, \"high\":0, \"medium\":0, \"low\":0, \"unknown\":0}, \"unpatched_vulnerabilities\":{\"critical\":0, \"high\":0, \"medium\":0, \"low\":0, \"unknown\":0}}'\nfor file in /tekton/home/clair-vulnerabilities-*.json; do\n    result=$(jq -rce \\\n        '{\n            vulnerabilities:{\n              critical: (.[] | .warnings? // [] | map(select(.metadata.details.name==\"clair_critical_vulnerabilities\").metadata.\"vulnerabilities_number\" // 0)| add // 0),\n              high: (.[] | .warnings? // [] | map(select(.metadata.details.name==\"clair_high_vulnerabilities\").metadata.\"vulnerabilities_number\" // 0)| add // 0),\n              medium: (.[] | .warnings? // [] | map(select(.metadata.details.name==\"clair_medium_vulnerabilities\").metadata.\"vulnerabilities_number\" // 0)| add // 0),\n              low: (.[] | .warnings? // [] | map(select(.metadata.details.name==\"clair_low_vulnerabilities\").metadata.\"vulnerabilities_number\" // 0)| add // 0),\n              unknown: (.[] | .warnings? // [] | map(select(.metadata.details.name==\"clair_unknown_vulnerabilities\").metadata.\"vulnerabilities_number\" // 0)| add // 0)\n            },\n            unpatched_vulnerabilities:{\n              critical: (.[] | .warnings? // [] | map(select(.metadata.details.name==\"clair_unpatched_critical_vulnerabilities\").metadata.\"vulnerabilities_number\" // 0)| add // 0),\n              high: (.[] | .warnings? // [] | map(select(.metadata.details.name==\"clair_unpatched_high_vulnerabilities\").metadata.\"vulnerabilities_number\" // 0)| add // 0),\n              medium: (.[] | .warnings? // [] | map(select(.metadata.details.name==\"clair_unpatched_medium_vulnerabilities\").metadata.\"vulnerabilities_number\" // 0)| add // 0),\n              low: (.[] | .warnings? // [] | map(select(.metadata.details.name==\"clair_unpatched_low_vulnerabilities\").metadata.\"vulnerabilities_number\" // 0)| add // 0),\n              unknown: (.[] | .warnings? // [] | map(select(.metadata.details.name==\"clair_unpatched_unknown_vulnerabilities\").metadata.\"vulnerabilities_number\" // 0)| add // 0)\n            }\n        }' \"$file\")\n\n    scan_result=$(jq -s -rce \\\n          '.[0].vulnerabilities.critical += .[1].vulnerabilities.critical |\n          .[0].vulnerabilities.high += .[1].vulnerabilities.high |\n          .[0].vulnerabilities.medium += .[1].vulnerabilities.medium |\n          .[0].vulnerabilities.low += .[1].vulnerabilities.low |\n          .[0].vulnerabilities.unknown += .[1].vulnerabilities.unknown |\n          .[0].unpatched_vulnerabilities.critical += .[1].unpatched_vulnerabilities.critical |\n          .[0].unpatched_vulnerabilities.high += .[1].unpatched_vulnerabilities.high |\n          .[0].unpatched_vulnerabilities.medium += .[1].unpatched_vulnerabilities.medium |\n          .[0].unpatched_vulnerabilities.low += .[1].unpatched_vulnerabilities.low |\n          .[0].unpatched_vulnerabilities.unknown += .[1].unpatched_vulnerabilities.unknown |\n          .[0]' <<<\"$scan_result $result\")\ndone\n\necho \"$scan_result\" | tee \"/tekton/results/SCAN_OUTPUT\"\n\ncat /tekton/home/images-processed.json | tee /tekton/results/IMAGES_PROCESSED\n# shellcheck disable=SC2154\ncat /tekton/home/reports.json > \"/tekton/results/REPORTS\"\n\nnote=\"Task clair-scan completed: Refer to Tekton task result SCAN_OUTPUT for vulnerabilities scanned by Clair.\"\nTEST_OUTPUT=$(make_result_json -r \"SUCCESS\" -t \"$note\")\necho \"${TEST_OUTPUT}\" | tee /tekton/results/TEST_OUTPUT\n", "environment":{"container":"conftest-vulnerabilities", "image":"oci://quay.io/konflux-ci/konflux-test@sha256:b046b1456077a2c15c51b1e0b83fde99a0a39bdf35872cde7437a857ef9d4ba7"}}]}, {"after":["build-image-index", "prefetch-dependencies"], "finishedOn":"2025-03-25T13:39:14Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-a0ba7e59a6891880-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"sast-snyk-check", "tekton.dev/task":"sast-snyk-check-oci-ta"}}, "parameters":{"ARGS":"", "CACHI2_ARTIFACT":"", "IGNORE_FILE_PATHS":"", "IMP_FINDINGS_ONLY":"true", "KFP_GIT_URL":"SITE_DEFAULT", "PROJECT_NAME":"", "RECORD_EXCLUDED":"false", "SNYK_SECRET":"snyk-secret", "SOURCE_ARTIFACT":"oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf", "caTrustConfigMapKey":"ca-bundle.crt", "caTrustConfigMapName":"trusted-ca", "image-digest":"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9", "image-url":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17"}}, "name":"sast-snyk-check", "ref":{"params":[{"name":"name", "value":"sast-snyk-check-oci-ta"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta:0.3@sha256:540f585f8abc3790e9e1285330d5610c1101173d9b26a61924586c220e4024e6"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"TEST_OUTPUT", "type":"string", "value":"{\"result\":\"FAILURE\",\"timestamp\":\"2025-03-25T13:39:10+00:00\",\"note\":\"For details, check Tekton task log.\",\"namespace\":\"default\",\"successes\":0,\"failures\":7,\"warnings\":0}\n"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:38:06Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":["use", "oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf=/var/workdir/source", "=/var/workdir/cachi2"], "entryPoint":"", "environment":{"container":"use-trusted-artifact", "image":"oci://quay.io/konflux-ci/build-trusted-artifacts@sha256:23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\n\nset -euo pipefail\n# shellcheck source=/dev/null\n. /utils.sh\ntrap 'handle_error /tekton/results/TEST_OUTPUT' EXIT\n\nif [[ -z \"${PROJECT_NAME}\" ]]; then\n  PROJECT_NAME=${COMPONENT_LABEL}\nfi\n\necho \"The PROJECT_NAME used is: ${PROJECT_NAME}\"\n\n# Installation of Red Hat certificates for cloning Red Hat internal repositories\nca_bundle=/mnt/trusted-ca/ca-bundle.crt\nif [ -f \"$ca_bundle\" ]; then\n  echo \"INFO: Using mounted CA bundle: $ca_bundle\"\n  cp -vf $ca_bundle /etc/pki/ca-trust/source/anchors\n  update-ca-trust\nfi\n\nSNYK_TOKEN_PATH=\"/etc/secrets/snyk_token\"\nif [ -f \"${SNYK_TOKEN_PATH}\" ] && [ -s \"${SNYK_TOKEN_PATH}\" ]; then\n  # SNYK token is provided\n  SNYK_TOKEN=\"$(cat ${SNYK_TOKEN_PATH})\"\n  export SNYK_TOKEN\nelse\n  # According to shellcheck documentation, the following error can be ignored as it is ignored through indirection: https://www.shellcheck.net/wiki/SC2034\n  # shellcheck disable=SC2034\n  to_enable_snyk='[here](https://konflux-ci.dev/docs/how-tos/testing/build/snyk/)'\n  note=\"Task sast-snyk-check-oci-ta skipped: If you wish to use the Snyk code SAST task, please create a secret name snyk-secret with the key 'snyk_token' containing the Snyk token by following the steps given ${to_enable_snyk}\"\n  TEST_OUTPUT=$(make_result_json -r SKIPPED -t \"$note\")\n  echo \"${TEST_OUTPUT}\" | tee \"/tekton/results/TEST_OUTPUT\"\n  exit 0\nfi\n\nSNYK_EXIT_CODE=0\nSOURCE_CODE_DIR=/var/workdir\nSEVERITY_THRESHOLD=\"high\"\nif [ \"${IMP_FINDINGS_ONLY}\" == \"false\" ]; then\n  SEVERITY_THRESHOLD=\"low\"\nfi\n\n# We ignore files using snyk ignore if the user set up the IGNORE_FILE_PATHS variable.\n(cd \"${SOURCE_CODE_DIR}\" && IFS=\",\" && for path in $IGNORE_FILE_PATHS; do\n  snyk ignore --file-path=\"source/${path}\"\ndone)\n\nset +e\n# We do want to expand ARGS (it can be multiple CLI flags, not just one)\n# shellcheck disable=SC2086\nsnyk code test $ARGS --severity-threshold=\"$SEVERITY_THRESHOLD\" \"$SOURCE_CODE_DIR\" --max-depth=1 --sarif-file-output=\"${SOURCE_CODE_DIR}\"/sast_snyk_check_out.json 1>&2 >>stdout.txt\nSNYK_EXIT_CODE=$?\nset -e\ntest_not_skipped=0\nSKIP_MSG=\"We found 0 supported files\"\ngrep -q \"$SKIP_MSG\" stdout.txt || test_not_skipped=$?\n\nif [[ \"$SNYK_EXIT_CODE\" -eq 0 ]] || [[ \"$SNYK_EXIT_CODE\" -eq 1 ]]; then\n  # In order to generate csdiff/v1, we need to add the whole path of the source code as Snyk only provides an URI to embed the context\n  (cd \"${SOURCE_CODE_DIR}\" && csgrep --mode=json --embed-context=3 \"${SOURCE_CODE_DIR}\"/sast_snyk_check_out.json) |\n    csgrep --mode=json --strip-path-prefix=\"source/\" \\\n      >sast_snyk_check_out_all_findings.json\n\n  echo \"Results:\"\n  (set -x && csgrep --mode=evtstat sast_snyk_check_out_all_findings.json)\n\n  if [[ \"${KFP_GIT_URL}\" == \"SITE_DEFAULT\" ]]; then\n    # Set KFP_GIT_URL to https://gitlab.cee.redhat.com/osh/known-false-positives.git for internal Konflux instances\n    PROBE_URL=\"https://gitlab.cee.redhat.com/osh/known-false-positives\"\n    echo -n \"Probing ${PROBE_URL}... \"\n    if curl --fail --head --max-time 60 --no-progress-meter \"${PROBE_URL}\" > >(head -1); then\n      echo \"Setting KFP_GIT_URL to https://gitlab.cee.redhat.com/osh/known-false-positives.git\"\n      KFP_GIT_URL=\"https://gitlab.cee.redhat.com/osh/known-false-positives.git\"\n    else\n      echo \"Setting KFP_GIT_URL to empty string\"\n      KFP_GIT_URL=\n    fi\n  fi\n\n  # We check if the KFP_GIT_URL variable is set to apply the filters or not\n  if [[ -z \"${KFP_GIT_URL}\" ]]; then\n    echo \"KFP_GIT_URL variable not defined. False positives won't be filtered\"\n    mv sast_snyk_check_out_all_findings.json filtered_sast_snyk_check_out.json\n  else\n    echo \"Filtering false positives in results files using csfilter-kfp...\"\n\n    CMD=(\n      csfilter-kfp\n      --verbose\n      --kfp-git-url=\"${KFP_GIT_URL}\"\n      --project-nvr=\"${PROJECT_NAME}\"\n    )\n\n    if [ \"${RECORD_EXCLUDED}\" == \"true\" ]; then\n      CMD+=(--record-excluded=\"excluded-findings.json\")\n    fi\n\n    set +e\n    \"${CMD[@]}\" sast_snyk_check_out_all_findings.json >filtered_sast_snyk_check_out.json\n    status=$?\n    set -e\n    if [ \"$status\" -ne 0 ]; then\n      echo \"Error: failed to filter known false positives\" >&2\n      return 1\n    else\n      echo \"Message: Succeed to filter known false positives\" >&2\n    fi\n    echo \"Results after filtering:\"\n    (set -x && csgrep --mode=evtstat filtered_sast_snyk_check_out.json)\n  fi\n\n  # Generation of scan stats\n\n  total_files=$(jq '[.runs[0].properties.coverage[].files] | add' \"${SOURCE_CODE_DIR}\"/sast_snyk_check_out.json)\n  supported_files=$(jq '[.runs[0].properties.coverage[] | select(.type == \"SUPPORTED\") | .files] | add' \"${SOURCE_CODE_DIR}\"/sast_snyk_check_out.json)\n\n  # We make sure the values are 0 if no supported/total files are found\n  if [ \"$total_files\" = \"null\" ] || [ -z \"$total_files\" ]; then\n    total_files=0\n  fi\n\n  if [ \"$supported_files\" = \"null\" ] || [ -z \"$supported_files\" ]; then\n    supported_files=0\n  fi\n\n  coverage_ratio=0\n  if ((total_files > 0)); then\n    coverage_ratio=$((supported_files * 100 / total_files))\n  fi\n\n  # embed stats in results file and convert to SARIF\n  csgrep --mode=sarif --set-scan-prop snyk-scanned-files-coverage:\"${coverage_ratio}\" \\\n    --set-scan-prop snyk-scanned-files-success:\"${supported_files}\" \\\n    --set-scan-prop snyk-scanned-files-total:\"${total_files}\" \\\n    filtered_sast_snyk_check_out.json >sast_snyk_check_out.sarif\n\n  TEST_OUTPUT=\n  parse_test_output \"sast-snyk-check-oci-ta\" sarif sast_snyk_check_out.sarif || true\n\n# When the test is skipped, the \"SNYK_EXIT_CODE\" is 3 and it can also be 3 in some other situation\nelif [[ \"$test_not_skipped\" -eq 0 ]]; then\n  note=\"Task sast-snyk-check-oci-ta success: Snyk code test found zero supported files.\"\n  ERROR_OUTPUT=$(make_result_json -r SUCCESS -t \"$note\")\nelse\n  echo \"sast-snyk-check test failed because of the following issues:\"\n  cat stdout.txt\n  note=\"Task sast-snyk-check-oci-ta failed: For details, check Tekton task log.\"\n  ERROR_OUTPUT=$(make_result_json -r ERROR -t \"$note\")\nfi\necho \"${TEST_OUTPUT:-${ERROR_OUTPUT}}\" | tee \"/tekton/results/TEST_OUTPUT\"\n", "environment":{"container":"sast-snyk-check", "image":"oci://quay.io/konflux-ci/konflux-test@sha256:b046b1456077a2c15c51b1e0b83fde99a0a39bdf35872cde7437a857ef9d4ba7"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\n\nif [ -z \"${IMAGE_URL}\" ]; then\n  echo 'No image-url provided. Skipping upload.'\n  exit 0\nfi\n\nUPLOAD_FILES=\"sast_snyk_check_out.sarif excluded-findings.json\"\nfor UPLOAD_FILE in ${UPLOAD_FILES}; do\n  if [ ! -f \"${UPLOAD_FILE}\" ]; then\n    echo \"No ${UPLOAD_FILE} exists. Skipping upload.\"\n    continue\n  fi\n  if [ \"${UPLOAD_FILES}\" == \"excluded-findings.json\" ]; then\n    MEDIA_TYPE=application/json\n  else\n    MEDIA_TYPE=application/sarif+json\n  fi\n  echo \"Selecting auth\"\n  select-oci-auth \"${IMAGE_URL}\" >\"${HOME}/auth.json\"\n  echo \"Attaching to ${IMAGE_URL}\"\n  oras attach --no-tty --registry-config \"$HOME/auth.json\" --artifact-type \"${MEDIA_TYPE}\" \"${IMAGE_URL}\" \"${UPLOAD_FILE}:${MEDIA_TYPE}\"\ndone\n", "environment":{"container":"upload", "image":"oci://quay.io/konflux-ci/oras@sha256:76f2f7682d32902fec34753c11f414756d0e88070d07658a35e71760ef928b71"}}]}, {"after":["build-container"], "finishedOn":"2025-03-25T13:38:38Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"virus, konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-7dd68d90865d52db-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"clamav-scan", "tekton.dev/task":"clamav-scan"}}, "parameters":{"ca-trust-config-map-key":"ca-bundle.crt", "ca-trust-config-map-name":"trusted-ca", "docker-auth":"", "image-digest":"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9", "image-url":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17"}}, "name":"clamav-scan", "ref":{"params":[{"name":"name", "value":"clamav-scan"}, {"name":"bundle", "value":"quay.io/redhat-appstudio-tekton-catalog/task-clamav-scan:0.2@sha256:42d35edf251cad78d396959c4cf2eff56d1ee551d0f8c51caf744b3cafaa4fe7"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"IMAGES_PROCESSED", "type":"string", "value":"{\"image\": {\"pullspec\": \"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\", \"digests\": [\"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9\"]}}\n"}, {"name":"TEST_OUTPUT", "type":"string", "value":"{\"timestamp\":\"1742909916\",\"namespace\":\"required_checks\",\"successes\":2,\"failures\":0,\"warnings\":0,\"result\":\"SUCCESS\",\"note\":\"All checks passed successfully\"}\n"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:37:59Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\nset -euo pipefail\n. /utils.sh\ntrap 'handle_error /tekton/results/TEST_OUTPUT' EXIT\n\nimagewithouttag=$(echo $IMAGE_URL | sed \"s/\\(.*\\):.*/\\1/\" | tr -d '\\n')\n\n# strip new-line escape symbol from parameter and save it to variable\nimageanddigest=$(echo $imagewithouttag@$IMAGE_DIGEST)\n\n# check if image is attestation one, skip the clamav scan in such case\nif [[ $imageanddigest == *.att ]]\nthen\n    echo \"$imageanddigest is an attestation image. Skipping ClamAV scan.\"\n    exit 0\nfi\n\nimages_processed_template='{\"image\": {\"pullspec\": \"'\"$IMAGE_URL\"'\", \"digests\": [%s]}}'\ndigests_processed=()\nmkdir logs\nmkdir content\ncd content\necho \"Extracting image(s).\"\n\n# Get the arch and image manifests by inspecting the image. This is mainly for identifying image indexes\nimage_manifests=$(get_image_manifests -i ${imageanddigest})\nif [ -n \"$image_manifests\" ]; then\n  while read -r arch arch_sha; do\n    destination=$(echo content-$arch)\n    mkdir -p \"$destination\"\n    arch_imageanddigest=$(echo $imagewithouttag@$arch_sha)\n\n    echo \"Running \\\"oc image extract\\\" on image of arch $arch\"\n    oc image extract --registry-config ~/.docker/config.json $arch_imageanddigest --path=\"/:${destination}\" --filter-by-os=\"linux/${arch}\"\n    if [ $? -ne 0 ]; then\n      echo \"Unable to extract image for arch $arch. Skipping ClamAV scan!\"\n      exit 0\n    fi\n\n    db_version=$(clamscan --version | sed 's|.*/\\(.*\\)/.*|\\1|')\n\n    echo \"Scanning image for arch $arch. This operation may take a while.\"\n    clamscan \"${destination}\" -ri --max-scansize=4095M --max-filesize=2000M \\\n      --max-scantime=0 --max-files=0 --max-recursion=1000 --max-dir-recursion=20000 --max-embeddedpe=4095M \\\n      --max-htmlnormalize=10M --max-htmlnotags=4095M --max-scriptnormalize=5M --max-ziptypercg=4095M \\\n      --max-partitions=50000 --max-iconspe=100000 --max-rechwp3=20000 --pcre-match-limit=100000000 --pcre-recmatch-limit=2000000 \\\n      --pcre-max-filesize=4095M --alert-exceeds-max=yes \\\n      --alert-encrypted=yes --alert-encrypted-archive=yes --alert-encrypted-doc=yes --alert-macros=yes \\\n      --alert-phishing-ssl=yes --alert-phishing-cloak=yes --alert-partition-intersection=yes \\\n      | tee /work/logs/clamscan-result-$arch.log || true\n\n    echo \"Executed-on: Scan was executed on clamscan version - $(clamscan --version) Database version: $db_version\" | tee -a \"/work/logs/clamscan-result-$arch.log\"\n\n    digests_processed+=(\"\\\"$arch_sha\\\"\")\n\n    if [[ -e \"/work/logs/clamscan-result-$arch.log\" ]]; then\n      # file_suffix=$(basename \"$file\" | sed 's/clamscan-result-//;s/.log//')\n      # OPA/EC requires structured data input, add clamAV log into json\n      jq -Rs '{ output: . }' /work/logs/clamscan-result-$arch.log > /work/logs/clamscan-result-log-$arch.json\n\n      EC_EXPERIMENTAL=1 ec test \\\n        --namespace required_checks \\\n        --policy /project/clamav/virus-check.rego \\\n        -o json \\\n        /work/logs/clamscan-result-log-$arch.json || true\n\n      # workaround: due to a bug in ec-cli, we cannot generate json and appstudio output at the same time, running it again\n      EC_EXPERIMENTAL=1 ec test \\\n        --namespace required_checks \\\n        --policy /project/clamav/virus-check.rego \\\n        -o appstudio \\\n        /work/logs/clamscan-result-log-$arch.json | tee /work/logs/clamscan-ec-test-$arch.json || true\n\n      cat /work/logs/clamscan-ec-test-$arch.json\n    fi\n  done < <(echo \"$image_manifests\" | jq -r 'to_entries[] | \"\\(.key) \\(.value)\"')\nfi\n\njq -s -rce '\n  reduce .[] as $item ({\"timestamp\":\"0\",\"namespace\":\"\",\"successes\":0,\"failures\":0,\"warnings\":0,\"result\":\"\",\"note\":\"\"};\n    {\n    \"timestamp\" : (if .timestamp < $item.timestamp then $item.timestamp else .timestamp end),\n    \"namespace\" : $item.namespace,\n    \"successes\" : (.successes + $item.successes),\n    \"failures\" : (.failures + $item.failures),\n    \"warnings\" : (.warnings + $item.warnings),\n    \"result\" : (if .result == \"\" or ($item.result == \"SKIPPED\" and .result == \"SUCCESS\") or ($item.result == \"WARNING\" and (.result == \"SUCCESS\" or .result == \"SKIPPED\")) or ($item.result == \"FAILURE\" and .result != \"ERROR\") or $item.result == \"ERROR\" then $item.result else .result end),\n    \"note\" : (if .result == \"\" or ($item.result == \"SKIPPED\" and .result == \"SUCCESS\") or ($item.result == \"WARNING\" and (.result == \"SUCCESS\" or .result == \"SKIPPED\")) or ($item.result == \"FAILURE\" and .result != \"ERROR\") or $item.result == \"ERROR\" then $item.note else .note end)\n    })' /work/logs/clamscan-ec-test-*.json | tee /tekton/results/TEST_OUTPUT\n\n# If the image is an Image Index, also add the Image Index digest to the list.\nif [[ \"${digests_processed[*]}\" != *\"$IMAGE_DIGEST\"* ]]; then\n  digests_processed+=(\"\\\"$IMAGE_DIGEST\\\"\")\nfi\n\ndigests_processed_string=$(IFS=,; echo \"${digests_processed[*]}\")\necho \"${images_processed_template/\\[%s]/[$digests_processed_string]}\" | tee /tekton/results/IMAGES_PROCESSED\n", "environment":{"container":"extract-and-scan-image", "image":"oci://quay.io/konflux-ci/clamav-db@sha256:6a5e0f38af6e66d4592301380dd763bea9d373ddb06bd528bdf6e13055cdf3f8"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\n\ncd logs\n\nfor UPLOAD_FILE in $(find . -name \"clamscan-result*.log\"); do\n  MEDIA_TYPE=text/vnd.clamav\n  args+=(\"${UPLOAD_FILE}:${MEDIA_TYPE}\")\ndone\nfor UPLOAD_FILE in $(find . -name \"clamscan-ec-test*.json\"); do\n  MEDIA_TYPE=application/vnd.konflux.test_output+json\n  args+=(\"${UPLOAD_FILE}:${MEDIA_TYPE}\")\ndone\n\nif [ -z \"${args}\" ]; then\n  echo \"No files found. Skipping upload.\"\n  exit 0;\nfi\n\necho \"Selecting auth\"\nselect-oci-auth $IMAGE_URL > $HOME/auth.json\necho \"Attaching to ${IMAGE_URL}\"\n oras attach --no-tty --registry-config \"$HOME/auth.json\" --artifact-type application/vnd.clamav \"${IMAGE_URL}\" \"${args[@]}\"\n", "environment":{"container":"upload", "image":"oci://quay.io/konflux-ci/oras@sha256:76f2f7682d32902fec34753c11f414756d0e88070d07658a35e71760ef928b71"}}]}, {"after":["build-image-index", "prefetch-dependencies"], "finishedOn":"2025-03-25T13:38:18Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-66954c50eddb0a4f-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"sast-shell-check", "tekton.dev/task":"sast-shell-check-oci-ta"}}, "parameters":{"CACHI2_ARTIFACT":"", "IMP_FINDINGS_ONLY":"true", "KFP_GIT_URL":"SITE_DEFAULT", "PROJECT_NAME":"", "RECORD_EXCLUDED":"false", "SOURCE_ARTIFACT":"oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf", "caTrustConfigMapKey":"ca-bundle.crt", "caTrustConfigMapName":"trusted-ca", "image-digest":"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9", "image-url":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17"}}, "name":"sast-shell-check", "ref":{"params":[{"name":"name", "value":"sast-shell-check-oci-ta"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-sast-shell-check-oci-ta:0.1@sha256:8e817af22b04305676597a556a975bde8552949ca2bf8918bf62414f135f93c8"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"TEST_OUTPUT", "type":"string", "value":"{\"result\":\"SUCCESS\",\"timestamp\":\"2025-03-25T13:38:14+00:00\",\"note\":\"Task sast-shell-check-oci-ta completed successfully.\",\"namespace\":\"default\",\"successes\":0,\"failures\":0,\"warnings\":0}\n"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:38:07Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":["use", "oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf=/var/workdir/source", "=/var/workdir/cachi2"], "entryPoint":"", "environment":{"container":"use-trusted-artifact", "image":"oci://quay.io/konflux-ci/build-trusted-artifacts@sha256:23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\nset -x\n# shellcheck source=/dev/null\nsource /utils.sh\ntrap 'handle_error /tekton/results/TEST_OUTPUT' EXIT\n\nif [[ -z \"${PROJECT_NAME}\" ]]; then\n  PROJECT_NAME=${COMPONENT_LABEL}\nfi\n\necho \"The PROJECT_NAME used is: ${PROJECT_NAME}\"\n\nca_bundle=/mnt/trusted-ca/ca-bundle.crt\nif [ -f \"$ca_bundle\" ]; then\n  echo \"INFO: Using mounted CA bundle: $ca_bundle\"\n  cp -vf $ca_bundle /etc/pki/ca-trust/source/anchors\n  update-ca-trust\nfi\n\nPACKAGE_VERSION=$(rpm -q --queryformat '%{NAME}-%{VERSION}-%{RELEASE}\\n' ShellCheck)\n\nOUTPUT_FILE=\"shellcheck-results.json\"\nSOURCE_CODE_DIR=/var/workdir/source\n\n# generate all shellcheck result JSON files to $SC_RESULTS_DIR, which defaults to ./shellcheck-results/\n/usr/share/csmock/scripts/run-shellcheck.sh \"$SOURCE_CODE_DIR\"\n\nCSGREP_OPTS=(\n  --mode=json\n  --strip-path-prefix=\"$SOURCE_CODE_DIR\"/\n  --remove-duplicates\n  --embed-context=3\n  --set-scan-prop=\"ShellCheck:${PACKAGE_VERSION}\"\n)\nif [[ \"$IMP_FINDINGS_ONLY\" == \"true\" ]]; then\n  # predefined list of shellcheck important findings\n  CSGREP_EVENT_FILTER='\\[SC(1020|1035|1054|1066|1068|1073|1080|1083|1099|1113|1115|1127|1128|1143|2043|2050|'\n  CSGREP_EVENT_FILTER+='2055|2057|2066|2069|2071|2077|2078|2091|2092|2157|2171|2193|2194|2195|2215|2216|'\n  CSGREP_EVENT_FILTER+='2218|2224|2225|2242|2256|2258|2261)\\]$'\n  CSGREP_OPTS+=(\n    --event=\"$CSGREP_EVENT_FILTER\"\n  )\nelse\n  CSGREP_OPTS+=(\n    --event=\"error|warning\"\n  )\nfi\n\nif ! csgrep \"${CSGREP_OPTS[@]}\" ./shellcheck-results/*.json >\"$OUTPUT_FILE\"; then\n  echo \"Error occurred while running 'run-shellcheck.sh'\"\n  note=\"Task sast-shell-check-oci-ta failed: For details, check Tekton task log.\"\n  ERROR_OUTPUT=$(make_result_json -r ERROR -t \"$note\")\n  echo \"${ERROR_OUTPUT}\" | tee \"/tekton/results/TEST_OUTPUT\"\n  exit 1\nfi\n\nif [[ \"${KFP_GIT_URL}\" == \"SITE_DEFAULT\" ]]; then\n  # Set KFP_GIT_URL to https://gitlab.cee.redhat.com/osh/known-false-positives.git for internal Konflux instances\n  PROBE_URL=\"https://gitlab.cee.redhat.com/osh/known-false-positives\"\n  echo -n \"Probing ${PROBE_URL}... \"\n  if curl --fail --head --max-time 60 --no-progress-meter \"${PROBE_URL}\" > >(head -1); then\n    echo \"Setting KFP_GIT_URL to https://gitlab.cee.redhat.com/osh/known-false-positives.git\"\n    KFP_GIT_URL=\"https://gitlab.cee.redhat.com/osh/known-false-positives.git\"\n  else\n    echo \"Setting KFP_GIT_URL to empty string\"\n    KFP_GIT_URL=\n  fi\nfi\n\n# Filter known false positives if KFP_GIT_URL is set\nif [ -n \"${KFP_GIT_URL}\" ]; then\n  echo \"Filtering known false positives using ${KFP_GIT_URL}\"\n\n  # build initial csfilter-kfp command\n  csfilter_kfp_cmd=(\n    csfilter-kfp\n    --verbose\n    --kfp-git-url=\"${KFP_GIT_URL}\"\n    --project-nvr=\"${PROJECT_NAME}\"\n  )\n\n  if [[ \"${RECORD_EXCLUDED}\" == \"true\" ]]; then\n    csfilter_kfp_cmd+=(--record-excluded=\"excluded-findings.json\")\n  fi\n\n  # Execute the command and capture any errors\n  if ! \"${csfilter_kfp_cmd[@]}\" \"${OUTPUT_FILE}\" >\"${OUTPUT_FILE}.filtered\" 2>\"${OUTPUT_FILE}.error\"; then\n    echo \"Error occurred while filtering known false positives:\"\n    cat \"${OUTPUT_FILE}.error\"\n    note=\"Task sast-shell-check-oci-ta failed: For details, check Tekton task log.\"\n    ERROR_OUTPUT=$(make_result_json -r ERROR -t \"$note\")\n    echo \"${ERROR_OUTPUT}\" | tee \"/tekton/results/TEST_OUTPUT\"\n    exit 1\n  else\n    mv \"${OUTPUT_FILE}.filtered\" \"$OUTPUT_FILE\"\n    echo \"Filtered results saved back to $OUTPUT_FILE\"\n  fi\nelse\n  echo \"KFP_GIT_URL is not set. Skipping false positive filtering.\"\nfi\n\necho \"ShellCheck results have been saved to $OUTPUT_FILE\"\n\ncsgrep --mode=evtstat \"$OUTPUT_FILE\"\ncsgrep --mode=sarif \"$OUTPUT_FILE\" >shellcheck-results.sarif\n\nnote=\"Task sast-shell-check-oci-ta completed successfully.\"\nTEST_OUTPUT=$(make_result_json -r SUCCESS -t \"$note\")\necho \"${TEST_OUTPUT}\" | tee \"/tekton/results/TEST_OUTPUT\"\n", "environment":{"container":"sast-shell-check", "image":"oci://quay.io/konflux-ci/konflux-test@sha256:b046b1456077a2c15c51b1e0b83fde99a0a39bdf35872cde7437a857ef9d4ba7"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\nset -e\n\nif [ -z \"${IMAGE_URL}\" ] || [ -z \"${IMAGE_DIGEST}\" ]; then\n  echo 'No image-url or image-digest param provided. Skipping upload.'\n  exit 0\nfi\n\nUPLOAD_FILES=\"shellcheck-results.sarif excluded-findings.json\"\n\nfor UPLOAD_FILE in ${UPLOAD_FILES}; do\n  if [ ! -f \"${UPLOAD_FILE}\" ]; then\n    echo \"No ${UPLOAD_FILE} exists. Skipping upload.\"\n    continue\n  fi\n\n  # Determine the media type based on the file extension\n  if [[ \"${UPLOAD_FILE}\" == *.json ]]; then\n    MEDIA_TYPE=\"application/json\"\n  else\n    MEDIA_TYPE=\"application/sarif+json\"\n  fi\n\n  echo \"Selecting auth\"\n  select-oci-auth \"$IMAGE_URL\" >\"$HOME/auth.json\"\n  echo \"Attaching to ${IMAGE_URL}\"\n  oras attach --no-tty --registry-config \"$HOME/auth.json\" --artifact-type \"${MEDIA_TYPE}\" \"${IMAGE_URL}\" \"${UPLOAD_FILE}:${MEDIA_TYPE}\"\ndone\n", "environment":{"container":"upload", "image":"oci://quay.io/konflux-ci/oras@sha256:76f2f7682d32902fec34753c11f414756d0e88070d07658a35e71760ef928b71"}}]}, {"after":["build-image-index", "prefetch-dependencies"], "finishedOn":"2025-03-25T13:38:47Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-937c60ebf4f75ab7-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"sast-unicode-check", "tekton.dev/task":"sast-unicode-check-oci-ta"}}, "parameters":{"CACHI2_ARTIFACT":"", "FIND_UNICODE_CONTROL_ARGS":"-p bidi -v -d -t", "FIND_UNICODE_CONTROL_GIT_URL":"https://github.com/siddhesh/find-unicode-control.git#c2accbfbba7553a8bc1ebd97089ae08ad8347e58", "KFP_GIT_URL":"SITE_DEFAULT", "PROJECT_NAME":"", "RECORD_EXCLUDED":"false", "SOURCE_ARTIFACT":"oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf", "caTrustConfigMapKey":"ca-bundle.crt", "caTrustConfigMapName":"trusted-ca", "image-url":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17"}}, "name":"sast-unicode-check", "ref":{"params":[{"name":"name", "value":"sast-unicode-check-oci-ta"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-sast-unicode-check-oci-ta:0.1@sha256:b9c3dfe732a0d9581c75d07d59043f675ddcbe5e9a3152daad99076bedfd5b85"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"TEST_OUTPUT", "type":"string", "value":"{\"result\":\"SUCCESS\",\"timestamp\":\"2025-03-25T13:38:40+00:00\",\"note\":\"Task sast-unicode-check-oci-ta success: No finding was detected\",\"namespace\":\"default\",\"successes\":0,\"failures\":0,\"warnings\":0}\n"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:38:10Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":["use", "oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf=/var/workdir/source", "=/var/workdir/cachi2"], "entryPoint":"", "environment":{"container":"use-trusted-artifact", "image":"oci://quay.io/konflux-ci/build-trusted-artifacts@sha256:23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\nset -exuo pipefail\n\n# shellcheck source=/dev/null\n. /utils.sh\ntrap 'handle_error /tekton/results/TEST_OUTPUT' EXIT\n\nif [[ -z \"${PROJECT_NAME}\" ]]; then\n  PROJECT_NAME=${COMPONENT_LABEL}\nfi\n\necho \"The PROJECT_NAME used is: ${PROJECT_NAME}\"\n\nSCAN_PROP=\"\"\n\nca_bundle=/mnt/trusted-ca/ca-bundle.crt\nif [ -f \"$ca_bundle\" ]; then\n  echo \"INFO: Using mounted CA bundle: $ca_bundle\"\n  cp -vf $ca_bundle /etc/pki/ca-trust/source/anchors\n  update-ca-trust\nfi\n\n# Clone the source code from upstream repo\nGIT_URL=$(echo \"${FIND_UNICODE_CONTROL_GIT_URL}\" | awk -F'#' '{print $1}')\nREV=$(echo \"${FIND_UNICODE_CONTROL_GIT_URL}\" | awk -F'#' '{print $2}')\n\n# Clone find-unicode-control repository\nif ! git clone \"${GIT_URL}\" find-unicode-control; then\n  echo \"Failed to clone the repository: ${GIT_URL}\" >&2\n  note=\"Task sast-unicode-check-oci-ta failed: For details, check Tekton task log.\"\n  ERROR_OUTPUT=$(make_result_json -r ERROR -t \"$note\")\n  echo \"${ERROR_OUTPUT}\" | tee \"/tekton/results/TEST_OUTPUT\"\n  exit 1\nfi\n\nif [[ -n \"${REV}\" ]]; then\n  if ! git -C ./find-unicode-control/ checkout \"${REV}\"; then\n    echo \"Failed to checkout the repository: ${GIT_URL} to ${REV}\" >&2\n    note=\"Task sast-unicode-check-oci-ta failed: For details, check Tekton task log.\"\n    ERROR_OUTPUT=$(make_result_json -r ERROR -t \"$note\")\n    echo \"${ERROR_OUTPUT}\" | tee \"/tekton/results/TEST_OUTPUT\"\n    exit 1\n  fi\n  SCAN_PROP=\"find-unicode-control-git-url:${FIND_UNICODE_CONTROL_GIT_URL}\"\nelse\n  git_url_suffix=$(git -C ./find-unicode-control/ rev-parse HEAD)\n  SCAN_PROP=\"find-unicode-control-git-url:${FIND_UNICODE_CONTROL_GIT_URL}#${git_url_suffix}\"\nfi\n\n# Find unicode control\nFUC_EXIT_CODE=0\n\n# shellcheck disable=SC2086\nLANG=en_US.utf8 ./find-unicode-control/find_unicode_control.py ${FIND_UNICODE_CONTROL_ARGS} \"${SOURCE_CODE_DIR}/source\" \\\n  >raw_sast_unicode_check_out.txt \\\n  2>raw_sast_unicode_check_out.log ||\n  FUC_EXIT_CODE=$?\nif [[ \"${FUC_EXIT_CODE}\" -ne 0 ]] && [[ \"${FUC_EXIT_CODE}\" -ne 1 ]]; then\n  echo \"Failed to run find-unicode-control command\" >&2\n  cat raw_sast_unicode_check_out.log\n  note=\"Task sast-unicode-check-oci-ta failed: For details, check Tekton task log.\"\n  ERROR_OUTPUT=$(make_result_json -r ERROR -t \"$note\")\n  echo \"${ERROR_OUTPUT}\" | tee \"/tekton/results/TEST_OUTPUT\"\n  exit 1\nfi\n\n# Translate the output format\nif ! sed -i raw_sast_unicode_check_out.txt -E -e 's|(.*:[0-9]+)(.*)|\\1: warning:\\2|' -e 's|^|Error: UNICONTROL_WARNING:\\n|'; then\n  echo \"Error: failed to translate the unicontrol output format\" >&2\n  note=\"Task sast-unicode-check-oci-ta failed: For details, check Tekton task log.\"\n  ERROR_OUTPUT=$(make_result_json -r ERROR -t \"$note\")\n  echo \"${ERROR_OUTPUT}\" | tee \"/tekton/results/TEST_OUTPUT\"\n  exit 1\nfi\n\n# Process all results as configured with CSGERP_OPTS\nCSGERP_OPTS=(\n  --mode=json\n  --remove-duplicates\n  --embed-context=3\n  --set-scan-prop=\"${SCAN_PROP}\"\n  --strip-path-prefix=\"${SOURCE_CODE_DIR}\"/source/\n)\n# In order to generate csdiff/v1, we need to add the whole path of the source code as\n# sast-unicode-check only provides an URI to embed the context\nif ! csgrep \"${CSGERP_OPTS[@]}\" raw_sast_unicode_check_out.txt >processed_sast_unicode_check_out.json 2>processed_sast_unicode_check_out.err; then\n  echo \"Error occurred while running csgrep with CSGERP_OPTS:\"\n  cat processed_sast_unicode_check_out.err\n  note=\"Task sast-unicode-check-oci-ta failed: For details, check Tekton task log.\"\n  ERROR_OUTPUT=$(make_result_json -r ERROR -t \"$note\")\n  echo \"${ERROR_OUTPUT}\" | tee \"/tekton/results/TEST_OUTPUT\"\n  exit 1\nfi\n\ncsgrep --mode=evtstat processed_sast_unicode_check_out.json\n\nif [[ \"${KFP_GIT_URL}\" == \"SITE_DEFAULT\" ]]; then\n  # Set KFP_GIT_URL to https://gitlab.cee.redhat.com/osh/known-false-positives.git for internal Konflux instances\n  PROBE_URL=\"https://gitlab.cee.redhat.com/osh/known-false-positives\"\n  echo -n \"Probing ${PROBE_URL}... \"\n  if curl --fail --head --max-time 60 --no-progress-meter \"${PROBE_URL}\" > >(head -1); then\n    echo \"Setting KFP_GIT_URL to https://gitlab.cee.redhat.com/osh/known-false-positives.git\"\n    KFP_GIT_URL=\"https://gitlab.cee.redhat.com/osh/known-false-positives.git\"\n  else\n    echo \"Setting KFP_GIT_URL to empty string\"\n    KFP_GIT_URL=\n  fi\nfi\n\n# Filter known false positives if KFP_GIT_URL is set\nif [ -n \"${KFP_GIT_URL}\" ]; then\n  echo \"Filtering false positives in results files using ${KFP_GIT_URL}...\" >&2\n\n  # Build initial csfilter-kfp command\n  csfilter_kfp_cmd=(\n    csfilter-kfp\n    --verbose\n    --kfp-git-url=\"${KFP_GIT_URL}\"\n  )\n\n  # Append --project-nvr option if PROJECT_NVR is set\n  if [[ -n \"${PROJECT_NAME}\" ]]; then\n    csfilter_kfp_cmd+=(--project-nvr=\"${PROJECT_NAME}\")\n  fi\n\n  # Append --record-excluded option if RECORD_EXCLUDED is true\n  if [[ \"${RECORD_EXCLUDED}\" == \"true\" ]]; then\n    csfilter_kfp_cmd+=(--record-excluded=\"excluded-findings.json\")\n  fi\n\n  if ! \"${csfilter_kfp_cmd[@]}\" processed_sast_unicode_check_out.json >sast_unicode_check_out.json 2>sast_unicode_check_out.error; then\n    echo \"Failed to filter known false positives\" >&2\n    cat sast_unicode_check_out.error\n    note=\"Task sast-unicode-check-oci-ta failed: For details, check Tekton task log.\"\n    ERROR_OUTPUT=$(make_result_json -r ERROR -t \"$note\")\n    echo \"${ERROR_OUTPUT}\" | tee \"/tekton/results/TEST_OUTPUT\"\n    exit 1\n  fi\nelse\n  echo \"KFP_GIT_URL is not set. Skipping false positive filtering.\" >&2\n  mv processed_sast_unicode_check_out.json sast_unicode_check_out.json\nfi\n\n# Generate sarif report\ncsgrep --mode=sarif sast_unicode_check_out.json >sast_unicode_check_out.sarif\nif [[ \"${FUC_EXIT_CODE}\" -eq 0 ]]; then\n  note=\"Task sast-unicode-check-oci-ta success: No finding was detected\"\n  ERROR_OUTPUT=$(make_result_json -r SUCCESS -t \"$note\")\nelif [[ \"${FUC_EXIT_CODE}\" -eq 1 ]] && [[ ! -s sast_unicode_check_out.sarif ]]; then\n  note=\"Task sast-unicode-check-oci-ta success: Some findings were detected, but filtered by known false positive\"\n  ERROR_OUTPUT=$(make_result_json -r SUCCESS -t \"$note\")\nelse\n  echo \"sast-unicode-check test failed because of the following issues:\"\n  cat sast_unicode_check_out.json\n  TEST_OUTPUT=\n  parse_test_output \"sast-unicode-check-oci-ta\" sarif sast_unicode_check_out.sarif || true\n  note=\"Task sast-unicode-check-oci-ta failed: For details, check Tekton task log.\"\n  ERROR_OUTPUT=$(make_result_json -r ERROR -t \"$note\")\nfi\necho \"${TEST_OUTPUT:-${ERROR_OUTPUT}}\" | tee \"/tekton/results/TEST_OUTPUT\"\n", "environment":{"container":"sast-unicode-check", "image":"oci://quay.io/konflux-ci/konflux-test@sha256:b046b1456077a2c15c51b1e0b83fde99a0a39bdf35872cde7437a857ef9d4ba7"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/usr/bin/env bash\n\nif [ -z \"${IMAGE_URL}\" ]; then\n  echo 'No image-url param provided. Skipping upload.'\n  exit 0\nfi\n\nUPLOAD_FILES=\"sast_unicode_check_out.sarif excluded-findings.json\"\nfor UPLOAD_FILE in ${UPLOAD_FILES}; do\n  if [ ! -f \"${UPLOAD_FILE}\" ]; then\n    echo \"No ${UPLOAD_FILE} exists. Skipping upload.\"\n    continue\n  fi\n\n  if [ \"${UPLOAD_FILES}\" == \"excluded-findings.json\" ]; then\n    MEDIA_TYPE=application/json\n  else\n    MEDIA_TYPE=application/sarif+json\n  fi\n\n  echo \"Selecting auth\"\n  select-oci-auth \"${IMAGE_URL}\" >\"${HOME}/auth.json\"\n  echo \"Attaching to ${IMAGE_URL}\"\n  oras attach --no-tty --registry-config \"$HOME/auth.json\" --artifact-type \"${MEDIA_TYPE}\" \"${IMAGE_URL}\" \"${UPLOAD_FILE}:${MEDIA_TYPE}\"\ndone\n", "environment":{"container":"upload", "image":"oci://quay.io/konflux-ci/oras@sha256:84a8026df313d5ef667fc4cfa85657a9fc55397cad879b43dacb92ee29b9af79"}}]}, {"after":["build-image-index", "prefetch-dependencies"], "finishedOn":"2025-03-25T13:38:16Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"image-build, appstudio", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-fb91ffa4630691aa-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "build.appstudio.redhat.com/build_type":"docker", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"push-dockerfile", "tekton.dev/task":"push-dockerfile-oci-ta"}}, "parameters":{"ARTIFACT_TYPE":"application/vnd.konflux.dockerfile", "CONTEXT":".", "DOCKERFILE":"Dockerfile", "IMAGE":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "IMAGE_DIGEST":"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9", "SOURCE_ARTIFACT":"oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf", "TAG_SUFFIX":".dockerfile"}}, "name":"push-dockerfile", "ref":{"params":[{"name":"name", "value":"push-dockerfile-oci-ta"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-push-dockerfile-oci-ta:0.1@sha256:f9e6e6afef13b5a1333a6b3a3d0ba98c815a723d7b5450dd0279f416c0c203a5"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"IMAGE_REF", "type":"string", "value":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a838ac1cd458746c5c4137e49eff3b53b2bfe47b3e1af52083d021a1ecd5eefc"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:38:07Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":["use", "oci:quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service@sha256:a636742f96b43e192b12e46479e67aacadb06b15ebdedd16ee3369680ed83caf=/var/workdir/source"], "entryPoint":"", "environment":{"container":"use-trusted-artifact", "image":"oci://quay.io/konflux-ci/build-trusted-artifacts@sha256:23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}}, {"annotations":null, "arguments":null, "entryPoint":"set -eu\nset -o pipefail\n\n# Same discovery logic used in buildah task\nSOURCE_CODE_DIR=source\nif [ -e \"$SOURCE_CODE_DIR/$CONTEXT/$DOCKERFILE\" ]; then\n  dockerfile_path=\"$(pwd)/$SOURCE_CODE_DIR/$CONTEXT/$DOCKERFILE\"\nelif [ -e \"$SOURCE_CODE_DIR/$DOCKERFILE\" ]; then\n  dockerfile_path=\"$(pwd)/$SOURCE_CODE_DIR/$DOCKERFILE\"\nelif echo \"$DOCKERFILE\" | grep -q \"^https\\?://\"; then\n  echo \"Fetch Dockerfile from $DOCKERFILE\"\n  dockerfile_path=$(mktemp --suffix=-dockerfile)\n  http_code=$(curl -s -L -w \"%{http_code}\" --output \"$dockerfile_path\" \"$DOCKERFILE\")\n  if [ $http_code != 200 ]; then\n    echo \"No Dockerfile is fetched. Server responds $http_code\"\n    exit 1\n  fi\nelse\n  echo \"Cannot find Dockerfile $DOCKERFILE\"\n  exit 1\nfi\n\necho \"Selecting auth for $IMAGE\"\nauth_json=$(mktemp)\nselect-oci-auth $IMAGE >\"$auth_json\"\n\ndockerfile_image=${IMAGE%:*}:${IMAGE_DIGEST/:/-}${TAG_SUFFIX}\n\ndockerfile_for_upload_path=/tmp/Dockerfile\ncp \"$dockerfile_path\" \"$dockerfile_for_upload_path\"\ncd \"$(dirname $dockerfile_for_upload_path)\"\nretry oras push --no-tty \\\n  --format json \\\n  --registry-config \"$auth_json\" \\\n  --artifact-type \"$ARTIFACT_TYPE\" \\\n  \"$dockerfile_image\" \"$(basename $dockerfile_for_upload_path)\" |\n  yq '.reference' | tr -d '\\r\\n' >\"$IMAGE_REF_RESULT\"\n", "environment":{"container":"push", "image":"oci://quay.io/konflux-ci/oras@sha256:76f2f7682d32902fec34753c11f414756d0e88070d07658a35e71760ef928b71"}}]}, {"after":["build-container"], "finishedOn":"2025-03-25T13:38:08Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-2b288a0dcf771e7b-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"tasks", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"rpms-signature-scan", "tekton.dev/task":"rpms-signature-scan"}}, "parameters":{"ca-trust-config-map-key":"ca-bundle.crt", "ca-trust-config-map-name":"trusted-ca", "image-digest":"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9", "image-url":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "workdir":"/tmp"}}, "name":"rpms-signature-scan", "ref":{"params":[{"name":"name", "value":"rpms-signature-scan"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan:0.2@sha256:d00d159c370e3c99447516970c316ef57dfd27c29e0ce3cff50727c9c40936d8"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "results":[{"name":"IMAGES_PROCESSED", "type":"string", "value":"{\"image\": {\"pullspec\": \"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\", \"digests\": [\"sha256:33963da792068d814e5b9ee8e7f15eebd3dd94bdf18f5e879ecd21b43c5d65a9\"]}}\n"}, {"name":"RPMS_DATA", "type":"string", "value":"{\"keys\": {\"199e2f91fd431d51\": 105, \"unsigned\": 0}}\n"}, {"name":"TEST_OUTPUT", "type":"string", "value":"{\"result\":\"SUCCESS\",\"timestamp\":\"2025-03-25T13:38:07+00:00\",\"note\":\"Task rpms-signature-scan completed successfully\",\"namespace\":\"default\",\"successes\":0,\"failures\":0,\"warnings\":0}\n"}], "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:37:59Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nset -ex\nset -o pipefail\n\nrpm_verifier \\\n  --image-url \"${IMAGE_URL}\" \\\n  --image-digest \"${IMAGE_DIGEST}\" \\\n  --workdir \"${WORKDIR}\" \\\n", "environment":{"container":"rpms-signature-scan", "image":"oci://quay.io/redhat-appstudio/tools@sha256:89258fa69543312e80180a2308bcb84ef86bb0bcab8f8caa704327fc7d4dd9c9"}}, {"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\nset -ex\n\nsource /utils.sh\nstatus=$(cat \"${WORKDIR}\"/status)\nrpms_data=$(cat \"${WORKDIR}\"/results)\nimages_processed=$(cat \"${WORKDIR}\"/images_processed)\nif [ \"$status\" == \"ERROR\" ]; then\n  note=\"Task rpms-signature-scan failed to scan images. Refer to Tekton task output for details\"\nelse\n  note=\"Task rpms-signature-scan completed successfully\"\nfi\n\nTEST_OUTPUT=$(make_result_json -r \"$status\" -t \"$note\")\necho \"${TEST_OUTPUT}\" | tee \"/tekton/results/TEST_OUTPUT\"\necho \"${rpms_data}\" | tee \"/tekton/results/RPMS_DATA\"\necho \"${images_processed}\" | tee \"/tekton/results/IMAGES_PROCESSED\"\n", "environment":{"container":"output-results", "image":"oci://quay.io/konflux-ci/konflux-test@sha256:36d3a2a6f4f96df41fc56c7c1c5a11c5d1c621f0f767607fda3f83cc21f638cc"}}]}, {"after":["build-image-index"], "finishedOn":"2025-03-25T13:40:10Z", "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipeline.tekton.dev/release":"5b082b1106753e093593d12152c82e1c4b0f37e5", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}", "tekton.dev/pipelines.minVersion":"0.12.1", "tekton.dev/tags":"konflux", "tekton.dev/taskrunSpanContext":"{\"traceparent\":\"00-5a79a364b75f00b967f061052e9b27bd-044c7e218678aaa0-01\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/memberOf":"finally", "tekton.dev/pipeline":"integration-service-on-push-nw92j", "tekton.dev/pipelineRun":"integration-service-on-push-nw92j", "tekton.dev/pipelineRunUID":"af3ce46d-77f1-40b3-8619-6e84e993f7cc", "tekton.dev/pipelineTask":"show-sbom", "tekton.dev/task":"show-sbom"}}, "parameters":{"CA_TRUST_CONFIG_MAP_KEY":"ca-bundle.crt", "CA_TRUST_CONFIG_MAP_NAME":"trusted-ca", "IMAGE_URL":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "PLATFORM":"linux/amd64"}}, "name":"show-sbom", "ref":{"params":[{"name":"name", "value":"show-sbom"}, {"name":"bundle", "value":"quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:04f15cbce548e1db7770eee3f155ccb2cc0140a6c371dc67e9a34d83673ea0c0"}, {"name":"kind", "value":"task"}], "resolver":"bundles"}, "serviceAccountName":"appstudio-pipeline", "startedOn":"2025-03-25T13:40:04Z", "status":"Succeeded", "steps":[{"annotations":null, "arguments":null, "entryPoint":"#!/bin/bash\n\ndownload_sbom_with_retry() {\n  status=-1\n  max_try=5\n  wait_sec=2\n\n  PLATFORM_ARG=\"$1\"\n  for run in $(seq 1 $max_try); do\n    status=0\n    cosign download sbom $PLATFORM_ARG $IMAGE_URL 2>>err\n    status=$?\n    if [ \"$status\" -eq 0 ]; then\n      break\n    fi\n    sleep $wait_sec\n  done\n  if [ \"$status\" -ne 0 ]; then\n    echo \"Failed to get SBOM after ${max_try} tries\" >&2\n    cat err >&2\n  fi\n}\n\nRAW_OUTPUT=$(skopeo inspect --no-tags --raw docker://${IMAGE_URL})\nif [ \"$(jq 'has(\"manifests\")' <<< \"$RAW_OUTPUT\")\" == \"true\" ] ; then\n  # Multi arch\n  ARCHES=$(jq -r '.manifests[].platform.architecture' <<< $RAW_OUTPUT)\nelse\n  ARCHES=\"\"\nfi\n\nif [ -z \"${ARCHES}\" ] ; then\n  # single arch image\n  download_sbom_with_retry \"\"\nelse\n  download_sbom_with_retry \" --platform=$PLATFORM \"\nfi\n", "environment":{"container":"show-sbom", "image":"oci://quay.io/konflux-ci/appstudio-utils@sha256:91ddd999271f65d8ec8487b10f3dd378f81aa894e11b9af4d10639fd52bba7e8"}}]}]}, "buildType":"tekton.dev/v1beta1/PipelineRun", "builder":{"id":"https://tekton.dev/chains/v2"}, "invocation":{"configSource":{}, "environment":{"annotations":{"build.appstudio.openshift.io/repo":"https://github.com/konflux-ci/integration-service?rev=5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/commit_sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "build.appstudio.redhat.com/target_branch":"main", "pipelinesascode.tekton.dev/branch":"main", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/controller-info":"{\"name\":\"default\",\"configmap\":\"pipelines-as-code\",\"secret\":\"pipelines-as-code-secret\", \"gRepo\": \"pipelines-as-code\"}", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/git-auth-secret":"pac-gitauth-anscta", "pipelinesascode.tekton.dev/git-provider":"github", "pipelinesascode.tekton.dev/installation-id":"47345373", "pipelinesascode.tekton.dev/log-url":"https://console.redhat.com/application-pipeline/ns/rhtap-integration-tenant/pipelinerun/integration-service-on-push-nw92j", "pipelinesascode.tekton.dev/max-keep-runs":"3", "pipelinesascode.tekton.dev/on-cel-expression":"event == \"push\" && target_branch == \"main\"", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sender":"hongweiliu17", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/sha-title":"Merge pull request #1064 from hongweiliu17/STONEINTG-1131", "pipelinesascode.tekton.dev/sha-url":"https://github.com/konflux-ci/integration-service/commit/5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/source-branch":"refs/heads/main", "pipelinesascode.tekton.dev/source-repo-url":"https://github.com/konflux-ci/integration-service", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "results.tekton.dev/recordSummaryAnnotations":"{\"repo\":\"integration-service\",\"commit\":\"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17\",\"eventType\":\"push\"}"}, "labels":{"app.kubernetes.io/managed-by":"pipelinesascode.tekton.dev", "app.kubernetes.io/version":"v0.33.0", "appstudio.openshift.io/application":"integration-service", "appstudio.openshift.io/component":"integration-service", "pipelines.appstudio.openshift.io/type":"build", "pipelinesascode.tekton.dev/check-run-id":"39371402921", "pipelinesascode.tekton.dev/event-type":"push", "pipelinesascode.tekton.dev/original-prname":"integration-service-on-push", "pipelinesascode.tekton.dev/repository":"integration-service", "pipelinesascode.tekton.dev/sha":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "pipelinesascode.tekton.dev/state":"started", "pipelinesascode.tekton.dev/url-org":"konflux-ci", "pipelinesascode.tekton.dev/url-repository":"integration-service", "tekton.dev/pipeline":"integration-service-on-push-nw92j"}}, "parameters":{"build-args":[], "build-args-file":"", "build-image-index":"false", "build-source-image":"true", "dockerfile":"Dockerfile", "git-url":"https://github.com/konflux-ci/integration-service", "hermetic":"false", "image-expires-after":"", "output-image":"quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "path-context":".", "prefetch-input":"", "rebuild":"false", "revision":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17", "skip-checks":"false"}}, "materials":[{"digest":{"sha256":"fd1203306628a07749973cded3e2a352a250f6db5be15e7d6d6ff750f763f119"}, "uri":"oci://registry.access.redhat.com/ubi9/skopeo"}, {"digest":{"sha256":"4e53ebd9242f05ca55bfc8d58b3363d8b9d9bc3ab439d9ab76cdbdf5b1fd42d9"}, "uri":"oci://quay.io/konflux-ci/git-clone"}, {"digest":{"sha256":"23953da08db809f841120214055aeb238bc553368e366feb58495d5a5493b19a"}, "uri":"oci://quay.io/konflux-ci/build-trusted-artifacts"}, {"digest":{"sha256":"d82ec03997f31e7233b8860b32b64d9d82e5f2d26f2c4809a36fcd8ec9849ad4"}, "uri":"oci://quay.io/konflux-ci/tekton-integration-catalog/sealights-go"}, {"digest":{"sha256":"86c6e45fcf6b6e74ff219967bbecaebe4376074d2f347fe8068b035812a0adf9"}, "uri":"oci://registry.access.redhat.com/ubi9/ubi-minimal"}, {"digest":{"sha256":"a87f2bfedda1dab63a2567ab067dba2b6f300af1920db3eec462be18deb4148a"}, "uri":"oci://quay.io/konflux-ci/yq"}, {"digest":{"sha256":"dabaeed7101209cfc7066e26301b12de2b72a2d943691537f598f7ad8c818dc9"}, "uri":"oci://quay.io/konflux-ci/cachi2"}, {"digest":{"sha256":"3d8f5fe17878a5325bf276e89ecfc17ed6d22a18b49a6255ffdf498ce94d9802"}, "uri":"oci://quay.io/konflux-ci/buildah-task"}, {"digest":{"sha256":"fbab9755f6324ddb8667aefb359e22e9e0119dab5434cf6fb5ddcaaf307d2cac"}, "uri":"oci://quay.io/konflux-ci/icm-injection-scripts"}, {"digest":{"sha256":"070ecb89de5104bb64fbf399a991a975e7d4d7e0cea0f7beb1e591b5591991c8"}, "uri":"oci://registry.access.redhat.com/rh-syft-tech-preview/syft-rhel9"}, {"digest":{"sha256":"0b7da5a5131a9663a06dd2c8dea4f6eb69912ec2c7ba66a24995d39fcdd9bc08"}, "uri":"oci://quay.io/konflux-ci/sbom-utility-scripts"}, {"digest":{"sha256":"91ddd999271f65d8ec8487b10f3dd378f81aa894e11b9af4d10639fd52bba7e8"}, "uri":"oci://quay.io/konflux-ci/appstudio-utils"}, {"digest":{"sha256":"7536131acdc9c25254d77342bcb77bbea969374928ad93832912e6fe4b135c3b"}, "uri":"oci://quay.io/konflux-ci/source-container-build"}, {"digest":{"sha256":"b046b1456077a2c15c51b1e0b83fde99a0a39bdf35872cde7437a857ef9d4ba7"}, "uri":"oci://quay.io/konflux-ci/konflux-test"}, {"digest":{"sha256":"d88d48d9e3210e70cfeb217de4ae935e283d66d37da0c2b4fe8fa08b6292047c"}, "uri":"oci://quay.io/konflux-ci/clair-in-ci"}, {"digest":{"sha256":"76f2f7682d32902fec34753c11f414756d0e88070d07658a35e71760ef928b71"}, "uri":"oci://quay.io/konflux-ci/oras"}, {"digest":{"sha256":"6a5e0f38af6e66d4592301380dd763bea9d373ddb06bd528bdf6e13055cdf3f8"}, "uri":"oci://quay.io/konflux-ci/clamav-db"}, {"digest":{"sha256":"84a8026df313d5ef667fc4cfa85657a9fc55397cad879b43dacb92ee29b9af79"}, "uri":"oci://quay.io/konflux-ci/oras"}, {"digest":{"sha256":"89258fa69543312e80180a2308bcb84ef86bb0bcab8f8caa704327fc7d4dd9c9"}, "uri":"oci://quay.io/redhat-appstudio/tools"}, {"digest":{"sha256":"36d3a2a6f4f96df41fc56c7c1c5a11c5d1c621f0f767607fda3f83cc21f638cc"}, "uri":"oci://quay.io/konflux-ci/konflux-test"}, {"digest":{"sha1":"5c63f666a3d35ab93f47cabf5e460a3deaa9ab17"}, "uri":"git+https://github.com/konflux-ci/integration-service.git"}], "metadata":{"buildFinishedOn":"2025-03-25T13:40:10Z", "buildStartedOn":"2025-03-25T13:34:08Z", "completeness":{"environment":false, "materials":false, "parameters":false}, "reproducible":false}}}","signatures":[{"keyid":"SHA256:IhiN7gY+Z3uSSd7tmj6w5Zfhqafzdhm3DZjIvGc6iYY","sig":"MEUCIQDQYfmW+0yRuDQq0JmT1L2iTbh3LkSSBj3/ZYtJvAECOAIgAVJTRqi4MrrslheG3rCV0ka39HMUENLof+zTU0mr59o="}]}
