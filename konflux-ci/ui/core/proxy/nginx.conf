worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name $host to: $proxy_host  $upstream_addr: $request $status upstream_response_time $upstream_response_time msec $msec request_time $request_time';
    access_log /dev/stderr upstreamlog;
    error_log /dev/stderr;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 4096;

    default_type application/octet-stream;

    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 9443 ssl;
        ssl_certificate /mnt/tls.crt;
        ssl_certificate_key /mnt/tls.key;
        server_name _;
        root /opt/app-root/src;

        location = / {
            index login.html;
        }

        location = /404.html {
        }

        location /httpbin/ {
            proxy_pass http://localhost/;
            auth_request_set $email  $upstream_http_x_auth_request_email;
            proxy_set_header X-Email $email;
            auth_request_set $user  $upstream_http_x_auth_request_user;
            proxy_set_header X-User  $user;
            auth_request_set $username  $upstream_http_x_auth_request_preferred_username; 
            proxy_set_header X-Auth-Request-Preferred-Username $username;
            auth_request_set $groups  $upstream_http_x_auth_request_groups;
            proxy_set_header X-Auth-Request-Groups  $user;

            auth_request /oauth2/auth;

            error_page 401 =403 https://localhost:9443/oauth2/sign_in?rd=$scheme://$host:9443$request_uri;
        }

        location /idp/ {
            # Identity Provider
            proxy_set_header    Host               $host;
            proxy_set_header    X-Real-IP          $remote_addr;
            proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host   $host;
            proxy_set_header    X-Forwarded-Server $host;
            proxy_set_header    X-Forwarded-Port   9443;
            proxy_set_header    X-Forwarded-Proto  $scheme;
            proxy_pass https://dex.dex.svc.cluster.local:9443;
        }

        location = /oauth2/auth {
            internal; 
            proxy_pass       http://127.0.0.1:6000;
            proxy_set_header Host             $host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Scheme         $scheme;
            # nginx auth_request includes headers but not body
            proxy_set_header Content-Length   "";
            proxy_pass_request_body           off;
        }

        location /oauth2/ {
            proxy_pass       http://127.0.0.1:6000/oauth2/;
            proxy_set_header Host             $host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Scheme         $scheme;
        }

        location /wss/oauth2/auth {
            internal; 
            proxy_pass       http://127.0.0.1:6000/oauth2/auth;
            proxy_set_header Host             $host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Scheme         $scheme;
            # nginx auth_request includes headers but not body
            proxy_set_header Content-Length   "";
            proxy_pass_request_body           off;

            # See https://github.com/kubernetes/kubernetes/pull/47740 for information
            # about the Sec-Websocket-Protocol header and the k8s api server.
            # We need to transform it back to a bearer token so oauth2-proxy can verifiy it.
            set $auth_var "";
            rewrite_by_lua_block {
                local h = ngx.req.get_headers()["Sec-Websocket-Protocol"]
                local patteren = [[base64url\.bearer\.authorization\.k8s\.io\.(.+?),]]
                local m = ngx.re.match(h, patteren)
                ngx.var.auth_var = ngx.decode_base64(m[1])
            }
            proxy_set_header Authorization "Bearer $auth_var";
        }

        location /api/k8s/registration/ {
           # Registration Service registration endpoint
            auth_request_set $email  $upstream_http_x_auth_request_email;
            proxy_set_header X-Email $email;
            auth_request_set $user  $upstream_http_x_auth_request_user;
            proxy_set_header X-User  $user;
            auth_request_set $username  $upstream_http_x_auth_request_preferred_username; 
            proxy_set_header X-Auth-Request-Preferred-Username $username;
            auth_request_set $groups  $upstream_http_x_auth_request_groups;
            proxy_set_header X-Auth-Request-Groups  $user;    

            auth_request /oauth2/auth;
            proxy_pass http://127.0.0.1:5000/;
        }

        location /api/k8s/apis/toolchain.dev.openshift.com/v1alpha1/workspaces {
           # Registration Service workspaces endpoint
            auth_request_set $email  $upstream_http_x_auth_request_email;
            proxy_set_header X-Email $email;
            auth_request_set $user  $upstream_http_x_auth_request_user;
            proxy_set_header X-User  $user;
            auth_request_set $username  $upstream_http_x_auth_request_preferred_username; 
            proxy_set_header X-Auth-Request-Preferred-Username $username;
            auth_request_set $groups  $upstream_http_x_auth_request_groups;
            proxy_set_header X-Auth-Request-Groups  $user;

            auth_request /oauth2/auth;
            proxy_pass http://127.0.0.1:5000/workspaces;
        }

        location /api/k8s/workspaces/ {
            # Kube-API
            auth_request_set $email  $upstream_http_x_auth_request_email;
            auth_request /oauth2/auth;

            rewrite /api/k8s/workspaces/.+?/(.+) /$1 break;
            proxy_pass https://kubernetes.default.svc;
            proxy_read_timeout 30m;
            proxy_set_header Impersonate-User $email;
            include /mnt/nginx-generated-config/bearer.conf;
        }

        location /wss/k8s/workspaces/ {
            auth_request_set $email  $upstream_http_x_auth_request_email;
            auth_request /wss/oauth2/auth;

            rewrite /wss/k8s/workspaces/.+?/(.+) /$1 break;
            proxy_pass https://kubernetes.default.svc/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 30m;
            proxy_set_header Impersonate-User $email;
            include /mnt/nginx-generated-config/websocket.conf;
        }

        location /api/k8s/ {
            # Kube-API
            auth_request_set $email  $upstream_http_x_auth_request_email;
            auth_request /oauth2/auth;

            proxy_pass https://kubernetes.default.svc/;
            proxy_read_timeout 30m;
            proxy_set_header Impersonate-User $email;
            include /mnt/nginx-generated-config/bearer.conf;
        }

        location /wss/k8s/ {
            auth_request_set $email  $upstream_http_x_auth_request_email;
            auth_request /wss/oauth2/auth;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 30m;
            proxy_set_header Impersonate-User $email;
            include /mnt/nginx-generated-config/websocket.conf;
        }

        location /api/k8s/plugins/tekton-results/workspaces/ {
            auth_request_set $email  $upstream_http_x_auth_request_email;
            auth_request /oauth2/auth;

            rewrite /api/k8s/plugins/tekton-results/workspaces/.+?/(.+) /$1 break;
            proxy_pass https://tekton-results-api-service.tekton-pipelines.svc.cluster.local:8080;
            proxy_read_timeout 30m;
            proxy_set_header Impersonate-User $email;
            include /mnt/nginx-generated-config/bearer.conf;
        }

        location /health {
            # Used for liveness probes
            return 200;
        }
    }
}
